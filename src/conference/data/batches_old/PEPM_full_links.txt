Conference full name: ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM)

1. Website of PEPM_3: https://popl25.sigplan.org/home/pepm-2025
Website information of PEPM_3:

href="https://popl25.sigplan.org" - POPL 2025
Sun 19 - Sat 25 January 2025href="https://popl25.sigplan.org/venue/POPL-2025-venue" - Denver, Colorado, United States
Toggle navigation 
 Attending | href="https://popl25.sigplan.org/venue/POPL-2025-venue" - Venue: Curtis Hotel Denver 
 Supporting POPL 
 Registration 
 Information for Virtual Attendees 
 Information for Presenters 
 Requesting a Visa 
 POPL Live Streams 
 Code of Conduct 
 Program | href="https://popl25.sigplan.org/program/program-POPL-2025/" - POPL Program 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Your Program 
 Filter by Day | href="https://popl25.sigplan.org/program/program-POPL-2025/" - Sun 19 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Mon 20 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Tue 21 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Wed 22 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Thu 23 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Fri 24 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Sat 25 Jan 
 href="#" - Tracks | POPL 2025 
 href="https://popl25.sigplan.org/track/POPL-2025-artifact-evaluation" - Artifact Evaluation 
 href="https://popl25.sigplan.org/track/POPL-2025-popl-research-papers" - POPL 
 href="https://popl25.sigplan.org/track/POPL-2025-student-research-competition" - Student Research Competition 
 href="https://popl25.sigplan.org/track/POPL-2025-student-volunteers" - Student Volunteers 
 href="https://popl25.sigplan.org/track/POPL-2025-tutorials" - Tutorials 
 href="https://popl25.sigplan.org/track/POPL-2025-workshops-and-co-located-events" - Workshops and Co-located Events 
 Co-hosted Conferences 
 href="https://popl25.sigplan.org/home/CPP-2025" - CPP 
 href="https://conf.researchr.org/home/VMCAI-2025" - VMCAI 
 Workshops 
 href="https://popl25.sigplan.org/home/CoqPL-2025" - CoqPL 
 href="https://popl25.sigplan.org/home/dafny-2025" - Dafny 
 href="https://popl25.sigplan.org/home/lafi-2025" - LAFI 
 href="https://popl25.sigplan.org/home/pepm-2025" - PEPM 
 href="https://popl25.sigplan.org/home/PLMW-POPL-2025" - PLMW @ POPL 
 href="https://popl25.sigplan.org/home/planqc-2025" - PLanQC 
 href="https://popl25.sigplan.org/home/prisc-2025" - PriSC 
 href="https://popl25.sigplan.org/home/tpsa-2025" - TPSA 
 href="https://popl25.sigplan.org/home/waw-2025" - WAW 
 href="https://popl25.sigplan.org/home/wits-2025" - WITS 
 Co-hosted Symposia 
 href="https://popl25.sigplan.org/home/PADL-2025" - PADL 
 Organization | POPL 2025 Committees 
 Organizing Committee 
 AV Committee 
 href="https://popl25.sigplan.org/committee/POPL-2025-student-volunteers" - Student Volunteers 
 Track Committees 
 href="https://popl25.sigplan.org/committee/POPL-2025-artifact-evaluation-artifact-evaluation-committee" - Artifact Evaluation 
 href="https://popl25.sigplan.org/committee/POPL-2025-popl-research-papers-program-committee" - POPL 
 href="https://popl25.sigplan.org/committee/POPL-2025-student-research-competition-selection-committee" - Student Research Competition 
 Contributors 
 People Index 
 Co-hosted Conferences 
 CPP | Organizing Committee 
 Program Committee 
 Steering Committee 
 VMCAI | Organizing Committee 
 Program Committee 
 Artifact Evaluation Committee 
 Workshops 
 CoqPL | Program Committee 
 Dafny | Program Committee Chairs 
 Program Committee 
 Steering Committee Chairs 
 LAFI | Program Committee 
 Steering Committee 
 href="#" - PEPM | href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Chairs 
 Program Committee Members 
 PLMW @ POPL | Organizing Committee 
 href="https://popl25.sigplan.org/committee/PLMW-POPL-2025-speakers" - Speakers 
 href="https://popl25.sigplan.org/committee/PLMW-POPL-2025-panelists" - Panelists 
 PLanQC | Organizing Committee 
 Program Committee 
 PriSC | Program Committee 
 Steering Committee 
 TPSA | Organizing Committee 
 Program Committee 
 WAW | href="https://popl25.sigplan.org/committee/waw-2025-papers-organizer" - Organizers 
 Program Committee 
 WITS | Program Committee 
 Co-hosted Symposia 
 PADL | href="https://popl25.sigplan.org/committee/PADL-2025-papers-programme-chairs" - Programme Chairs 
 Program Committee 
 Search 
 Series | Series 
 href="https://conf.researchr.org/home/POPL-2026" - POPL 2026 
 POPL 2025 
 POPL 2024 
 POPL 2023 
 POPL 2022 
 POPL 2021 
 POPL 2020 
 POPL 2019 
 POPL 2018 
 POPL 2017 
 POPL 2016 
 href="https://conf.researchr.org/signin/POPL-2025/https%3A%5Es%5Espopl25.sigplan.org%5Eshome%5Espepm-2025" - Sign in 
 Sign up 
 href="https://popl25.sigplan.org" - POPL 2025
(series) /PEPM 2025 (href="https://popl25.sigplan.org/series/pepm" - series
) /The 2025 ACM SIGPLAN Workshop on Partial Evaluation and Program ManipulationPEPM 2025 
 About 
 Program 
 href="#event-overview" - Accepted Papers 
 Invited Speakers 
 Proceedings 
 People Index 
 href="#Call-for-Papers" - Call for Papers 
 The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM) has a history going back to 1991 and has been held in conjunction with POPL every year since 2006. The origin of PEPM is in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over time, PEPM has broadened its scope to include a variety of research areas centered around semantics-based program manipulation — the systematic exploitation of treating programs not only as subject to black-box execution, but also as data structures that can be generated, analyzed, and transformed while establishing or maintaining important semantic properties. 
 Scope 
 In addition to the traditional PEPM topics (see below), PEPM 2025 welcomes submissions in new domains, in particular: 
 Semantics based and machine-learning based program synthesis and program optimization. 
 Modeling, analysis, and transformation techniques for distributed and concurrent protocols and programs, such as session types, linear types, and contract specifications. 
 More generally, topics of interest for PEPM 2024 include, but are not limited to: 
 Program and model manipulation techniques such as: supercompilation, partial evaluation, fusion, on-the-fly program adaptation, active libraries, program inversion, slicing, symbolic execution, refactoring, decompilation, and obfuscation. 
 Techniques that treat programs/models as data objects including metaprogramming, generative programming, embedded domain-specific languages, program synthesis by sketching and inductive programming, staged computation, and model-driven program generation and transformation. 
 Program analysis techniques that are used to drive program/model manipulation such as: abstract interpretation, termination checking, binding-time analysis, constraint solving, type systems, automated testing and test case generation. 
 Application of the above techniques including case studies of program manipulation in real-world (industrial, open-source) projects and software development processes, descriptions of robust tools capable of effectively handling realistic applications, benchmarking. Examples of application domains include legacy program understanding and transformation, DSL implementations, visual languages and end-user programming, scientific computing, middleware frameworks and infrastructure needed for distributed and web-based applications, embedded and resource-limited computation, and security. 
 This list of categories is not exhaustive, and we encourage submissions describing new theories and applications related to semantics-based program manipulation in general. If you have a question as to whether a potential submission is within the scope of the workshop, please contact the program co-chairs, Guillaume Allais (guillaume.allais@strath.ac.uk) and Annie Liu (liu@cs.stonybrook.edu). 
 AUTHORS TAKE NOTE:The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of the conference. The official publication date affects the deadline for any patent filings related to published work. 
 Highlights 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/8/The-Ethical-Compiler-Addressing-the-Is-Ought-Gap-in-Compilation-Invited-Talk-" - The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk)William J. Bowman
href="https://popl25.sigplan.org/details/pepm-2025-papers/9/A-Type-Theoretic-Framework-for-Certified-Meta-programming-Invited-Talk-Extended-Abst" - A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract)Brigitte Pientka
href="https://popl25.sigplan.org/details/pepm-2025-papers/10/The-Missing-Diagonal-High-Level-Languages-for-Low-Level-Systems-Invited-Talk-Abstra" - The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract)Satnam Singh
Supporters 
 Plenary 
 Hide plenary sessions 
 Program Display Configuration 
 Time Zone 
 The program is currently displayed in(GMT-07:00) Mountain Time (US & Canada).Use conference time zone: (GMT-07:00) Mountain Time (US & Canada)Select other time zone 
  
 The GMT offsets shown reflect the offsetsat the moment of the conference. 
 Time Band 
 By setting a time band, the program will dim events that are outside this time window. This is useful for (virtual) conferences with a continuous program (with repeated sessions). 
 The time band will also limit the events that are included in the personal iCalendar subscription service.Display full programSpecify a time band- 
 Save 
 Close 
 ×You're viewing the program in a time zone which is different from your device's time zonechange time zone 
 Tue 21 Jan 
 Displayed time zone:Mountain Time (US & Canada)change 
  
 09:00 - 10:30 | High-level abstraction and automationhref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Sam LindleyThe University of Edinburgh 
 09:00 
 10m 
 Day opening | WelcomePEPM 
 Y. Annie LiuStony Brook University 
 09:10 
 50m 
 Keynote | The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract)PEPM 
 Satnam SinghGroq 
 DOI 
 10:00 
 30m 
 Research paper | A Type Safe Calculus for Generating Syntax-Directed EditorsRemotePEPM 
 Andreas Tor MortensenDepartment of Computer Science, Aalborg University,Benjamin BennetzenDepartment of Computer Science, Aalborg University,Nikolaj Rossander KristensenDepartment of Computer Science, Aalborg University,Peter Buus SteffensenDepartment of Computer Science, Aalborg University,Hans HüttelDepartment of Computer Science, Aalborg University,Sune Skaanning EngtorpDepartment of Computer Science, University of Copenhagen 
 DOI 
  
 10:30 - 11:00 | Breakhref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-breakroom" - Breakroom 
 10:30 
 30m 
 Coffee break | BreakCatering 
  
 11:00 - 12:30 | Language design, pedagogical tool, and staged interpreterhref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Michael HanusKiel University 
 11:00 
 45m 
 Keynote | The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk)PEPM 
 William J. BowmanUniversity of British Columbia 
 DOIPre-printhref="https://popl25.sigplan.org/details/pepm-2025-papers/8/The-Ethical-Compiler-Addressing-the-Is-Ought-Gap-in-Compilation-Invited-Talk-" - File Attached 
 11:45 
 30m 
 Research paper | Algebraic Stepper for Simple ModulesPEPM 
 Kenichi AsaiOchanomizu University,Hinano AkiyamaOchanomizu University 
 DOI 
 12:15 
 15m 
 Short-paper | Collapsing Towers for Side-Channel Security (Short Paper)PEPM 
 Cameron WongHarvard SEAS,Muhammad AbdullahMIT,Yuheng YangMIT,Mengjia YanMIT,Adam ChlipalaMassachusetts Institute of Technology,Nada AminHarvard University 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/4/Collapsing-Towers-for-Side-Channel-Security-Short-Paper-" - File Attached 
  
 12:30 - 14:00 | Lunchhref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-four-square-ballroom" - Four Square Ballroom 
 12:30 
 90m 
 Lunch | LunchCatering 
  
 12:30 - 14:00 | SIGPLAN SC Meetinghref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-virtual-only" - Virtual Only 
 12:30 
 90m 
 Meeting | SIGPLAN SC MeetingCatering 
  
 14:00 - 15:30 | Types and meta theoryhref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Kenichi AsaiOchanomizu University 
 14:00 
 45m 
 Keynote | A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract)PEPM 
 Brigitte PientkaMcGill University 
 DOI 
 14:45 
 30m 
 Research paper | Typed Program Analysis without EncodingsPEPM 
 Barry JayDOI 
 15:15 
 15m 
 Short-paper | A Fuelled Self-Reducer for System T (Short Paper)PEPM 
 Greg BrownUniversity of Edinburgh 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/1/A-Fuelled-Self-Reducer-for-System-T-Short-Paper-" - File Attached 
  
 15:30 - 16:00 | Breakhref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-breakroom" - Breakroom 
 15:30 
 30m 
 Coffee break | BreakCatering 
  
 16:00 - 17:30 | Macros, lenses, and LLMshref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Y. Annie LiuStony Brook University 
 16:00 
 15m 
 Short-paper | Type-Sensitive Algebraic Macros (Short Paper)RemotePEPM 
 April GonçalvesUniversity of Strathclyde,Robert AtkeyUniversity of Strathclyde 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/2/Type-Sensitive-Algebraic-Macros-Short-Paper-" - File Attached 
 16:15 
 30m 
 Research paper | Characterizations of Partial Well-Behaved LensesPEPM 
 Keishi HASHIBAThe University of Osaka,Keisuke NakanoTohoku University,Kazuyuki AsadaTohoku University,Kentaro KikuchiTohoku University 
 DOI 
 16:45 
 40m 
 Panel | Semantics-based program manipulation in the age of LLMsPEPM 
 William J. BowmanUniversity of British Columbia,Brigitte PientkaMcGill University,Satnam SinghGroq,Sam LindleyThe University of Edinburgh 
 17:25 
 5m 
 Day closing | FarewellPEPM 
 Y. Annie LiuStony Brook University 
 Accepted Papers 
  
 Title 
 A Fuelled Self-Reducer for System T (Short Paper)PEPM 
 Greg Brown 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/1/A-Fuelled-Self-Reducer-for-System-T-Short-Paper-" - File Attached 
 Algebraic Stepper for Simple ModulesPEPM 
 Kenichi Asai,Hinano Akiyama 
 DOI 
 A Type Safe Calculus for Generating Syntax-Directed EditorsRemotePEPM 
 Andreas Tor Mortensen,Benjamin Bennetzen,Nikolaj Rossander Kristensen,Peter Buus Steffensen,Hans Hüttel,Sune Skaanning Engtorp 
 DOI 
 A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract)PEPM 
 Brigitte Pientka 
 DOI 
 Characterizations of Partial Well-Behaved LensesPEPM 
 Keishi HASHIBA,Keisuke Nakano,Kazuyuki Asada,Kentaro Kikuchi 
 DOI 
 Collapsing Towers for Side-Channel Security (Short Paper)PEPM 
 Cameron Wong,Muhammad Abdullah,Yuheng Yang,Mengjia Yan,Adam Chlipala,Nada Amin 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/4/Collapsing-Towers-for-Side-Channel-Security-Short-Paper-" - File Attached 
 The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk)PEPM 
 William J. Bowman 
 DOIPre-printhref="https://popl25.sigplan.org/details/pepm-2025-papers/8/The-Ethical-Compiler-Addressing-the-Is-Ought-Gap-in-Compilation-Invited-Talk-" - File Attached 
 The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract)PEPM 
 Satnam Singh 
 DOI 
 Typed Program Analysis without EncodingsPEPM 
 Barry Jay 
 DOI 
 Type-Sensitive Algebraic Macros (Short Paper)RemotePEPM 
 April Gonçalves,Robert Atkey 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/2/Type-Sensitive-Algebraic-Macros-Short-Paper-" - File Attached 
 Call for Papers 
 Three kinds of submissions will be accepted: 
 Regular Research Papersshould describe new results, and will be judged on originality, correctness, significance, and clarity. Regular research papers must not exceed 12 pages. 
 Short Papersmay include tool demonstrations and presentations of exciting if not fully polished research, and of interesting academic, industrial, and open-source applications that are new or unfamiliar. Short papers must not exceed 6 pages. 
 Talk Proposalsmay propose lectures about topics of interest for PEPM, existing work representing relevant contributions, or promising contributions that are not mature enough to be proposed as papers of the other categories. Talk Proposals must not exceed 2 pages. 
 References and appendices are not included in page limits. Appendices may not necessarily be read by reviewers. Both kinds of submissions should be typeset using the two-column ‘sigplan’ sub-format of the new ‘acmart’ format available at: 
 href="http://sigplan.org/Resources/Author/" - http://sigplan.org/Resources/Author/
and submitted electronically via HotCRP:href="https://pepm25.hotcrp.com" - https://pepm25.hotcrp.com
Reviewing will be single-blind. 
 Submissions are welcome from PC members (except the two co-chairs). 
 Accepted regular research papers will appear in formal proceedings published by ACM, and be included in the ACM Digital Library. Accepted short papers do not constitute formal publications and will not appear in the proceedings. 
 At least one author of each accepted contribution must attend the workshop (physically or virtually) to present the work. In the case of tool demonstration papers, a live demonstration of the described tool is expected. 
 Invited Speakers 
 William Bowman– University of British Columbia 
 Brigitte Pientka– McGill University 
 Satnam Singh– Groq 
  
 Abstracts 
  
 The Ethical Compiler: Addressing the Is-Ought Gap in Compilation 
 William Bowman 
 The is-ought gap is a problem in moral philosophy observing that ethical judgments (“ought”) cannot be grounded purely in truth judgments (“is”): that anoughtcannot be derived from anis. This gap renders the following argument invalid: “Itistrue that type safe languages prevent bugs and that bugs cause harm, therefore yououghtto write in type safe languages.”. To validate ethical claims, we must bridge the gap between is and ought with some ethical axiom, such as “I believe oneoughtnot cause harm.”. 
 But what do ethics have to do with manipulating programs? A lot! Ethics are central to correctness! For example, suppose an algorithm infers the type ofeisBool, andeis in fact aBool; the program type checks. Is the program correct—does it behave as itought? We cannot answer this without some ethical axioms: what does the programmer believeoughtto be? 
 I believe one ought to design and implement languages ethically. We must give the programmer the ability to express their ethics—their values and beliefs about a program—in addition to its mere computational content, and build tools that respect the distinction between is and ought. This talk is a guide to ethical language design and implementation possibilities. 
 Bio 
 William J. Bowman is an Assistant Professor of computer science in the Software Practices Lab at University of British Columbia. Broadly speaking, he is interested in making it easier for programmers to communicate their intent to machines, and preserving that intent through compilation. More specifically, their research interests include secure and verified compilation, dependently typed programming, verification, meta-programming, and interoperability. His recent work examines type-preserving compilation of dependently typed programming languages like Coq, a technique that can enable preserving security and correctness invariants of verified software through compilation and statically enforcing those invariants in the low-level (assembly-like) code generated by compilers. 
  
 Cocon: A Type-Theoretic Framework for Meta-Programming 
 Brigitte Pientka 
 Meta-programming is the art of writing programs that produce or manipulate other programs. This allows programmers to automate error-prone or repetitive tasks, and exploit domain- specific knowledge to customize the generated code. Hence, meta-programming is widely used in a range of technologies: from cryptographic message authentication in secure network protocols to support reflection in proof environments such as Lean. 
 Unfortunately, writing safe meta-programs remains very challenging and sometimes frustrating, as traditionally errors in the generated code are only detected when running it, but not at the time when code is generated. To make it easier to write and maintain meta-programs, tools that allow us to detect errors during code generation - instead of when running the generated code - are essential. 
 This talk revisits Cocon, a framework for certified meta-programming. Cocon is a Martin-Löf dependent type theory for defining logics and proofs that allows us to represent domain-specific languages (DSL) within the logical framework LF and in addition write recursive programs and proofs about those DSLs using pattern matching. It is a two-level type theory where Martin-Löf type theory sits on top of the logical framework LF and supports a recursor over (contextual) LF objects. As a consequence, we can embed into LF STLC or System F, etc. and then write programs about those encodings using Cocon itself. 
 This means Cocon can serve as a target for compiling meta-programming systems -from compiling meta-programming with STLC to System F. Moreover, Cocon supports writing an evaluator for each of these sub-languages. This also allows us to reflect back our encoded sub-language and evaluate their encodings using Cocon’s evaluation strategy. 
 I will conclude with highlighting more recent research directions and challenges that build on the core ideas of Cocon and aim to support meta-programming and intensional code analysis directly in System F and Martin-Löf type theory. 
 Bio 
 Brigitte Pientka a Full Professor in the School of Computer Science at McGill University. Her main research interests lie in developing theoretical foundations of programming languages. A central question of her work is: How can we design programming languages that ensure that programs are safe and have fewer bugs? In 2018, her work on the Beluga programming language has received the Test of Time Award from International Symposium on Principles and Practice of Declarative Programming (PPDP). 
 Brigitte Pientka is a leader within the programming languages research community, and serves for example on the SIGPLAN executive committee. In particular, she is passionate about working towards overcoming systemic barriers for underrepresented groups. In 2018, she co-founded the Women in Logic workshop which provides valuable networking opportunity to female researchers and as the general chair for POPL in 2020 she introduced Mentoring Breakfasts which now are a fixture at SIGPLAN events. 
  
 The Missing Diagonal: High Level Languages for Low Level Systems 
 Satnam Singh 
 The computing community has produced many high level languages and tools for programming high level systems (e.g. Java for user interfaces) and it has produced many low level languages and tools for programming low level systems (C for operating systems, Verilog for hardware design) yet there are not many examples of high level systems that have been produced to help develop low level systems. Sometimes this is due to a suspicion that the layers of abstraction that high level systems use incur unacceptable performance overheads. However, this talk attempts to challenge that view, giving examples of high level systems that improve the designer productivity for developing low level systems which also improve the quality of verification for low level systems. 
 The talk will draw examples from the presenter’s own experience, as well as the work of others. Specific examples will include Lava and Bluespec for the design of hardware, the Silver Oak project for the co-design of a high assurance silicon root of trust, a Haskell-based DSL for programming machine learning chips, and recent work on the specification and verification of parts of a new silicon chip produced at Groq which makes use of the same Haskell DSL. 
 Bio 
 Satnam Singh is a Fellow at Groq where he applies the power of functional programming languages to the design of machine learning chips and their programming models. Satnam Singh previously worked at Google (machine learning chips, cluster management), Facebook (Android optimization), Microsoft (parallel and concurrent programming) and Xilinx (Lava DSL for hardware design). He started his career as an academic at the University of Glasgow (FPGA-based application acceleration and functional programming). 
 Proceedings 
 href="https://doi.org/10.1145/3704253" - PEPM '25: Proceedings of the 2025 ACM SIGPLAN International Workshop on Partial Evaluation and Program Manipulation
General Chairs:Guillaume AllaisUniversity of Strathclyde, United Kingdom 
 ,,Yanhong Annie LiuStony Brook University, USA 
 Publisher:Association for Computing Machinery, New York, NY, United States 
 Conference:PEPM '25: 2025 ACM SIGPLAN International Workshop on Partial Evaluation and Program Manipulation. Denver, CO, USA. 21 January 2025 
 ISBN:979-8-4007-1350-7 
 Published:10 January 2025 
 Sponsors:SIGPLAN 
 In-Cooperation:SIGACT, SIGLOG 
 PDFeReader 
 Filter 
 Role Type 
 Committee member 
 Contributor/Author 
 Session chair 
 Country 
 -unspecified- 
 Canada 
 China 
 Denmark 
 France 
 Germany 
 Japan 
 Netherlands 
 Spain 
 Taiwan 
 United Kingdom 
 United States 
 Search 
 Results(44) 
  
 A 
 Muhammad AbdullahAbdullah, Muhammad 
 MIT 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Hinano AkiyamaAkiyama, Hinano 
 Ochanomizu University 
 Algebraic Stepper for Simple Modules 
 Guillaume AllaisAllais, Guillaume 
 University of StrathclydeUnited Kingdom 
 href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Co-chair in Chairs within the PEPM 2025-track 
 Nada AminAmin, Nada 
 Harvard UniversityUnited States 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Zena M. AriolaAriola, Zena M. 
 University of OregonUnited States 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Kazuyuki AsadaAsada, Kazuyuki 
 Tohoku University 
 Characterizations of Partial Well-Behaved Lenses 
 Kenichi AsaiAsai, Kenichi 
 Ochanomizu UniversityJapan 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of Types and meta theory (part of PEPM 2025)
Algebraic Stepper for Simple Modules 
 Robert AtkeyAtkey, Robert 
 University of Strathclyde 
 Type-Sensitive Algebraic Macros (Short Paper) 
 B 
 Benjamin BennetzenBennetzen, Benjamin 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 William J. BowmanBowman, William J. 
 University of British ColumbiaCanada 
 Semantics-based program manipulation in the age of LLMs 
 The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk) 
 Greg BrownBrown, Greg 
 University of Edinburgh 
 A Fuelled Self-Reducer for System T (Short Paper) 
 C 
 Liang-Ting ChenChen, Liang-Ting 
 Academia SinicaTaiwan 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Adam ChlipalaChlipala, Adam 
 Massachusetts Institute of TechnologyUnited States 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Youyou CongCong, Youyou 
 Institute of Science TokyoJapan 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 E 
 Sune Skaanning EngtorpEngtorp, Sune Skaanning 
 Department of Computer Science, University of Copenhagen 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 G 
 April GonçalvesGonçalves, April 
 University of Strathclyde 
 Type-Sensitive Algebraic Macros (Short Paper) 
 H 
 Michael HanusHanus, Michael 
 Kiel UniversityGermany 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of Language design, pedagogical tool, and staged interpreter (part of PEPM 2025) 
 Keishi HASHIBAHASHIBA, Keishi 
 The University of OsakaJapan 
 Characterizations of Partial Well-Behaved Lenses 
 Fritz HengleinHenglein, Fritz 
 Department of Computer Science, University of Copenhagen (DIKU) and Deon DigitalDenmark 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Manuel HermenegildoHermenegildo, Manuel 
 Technical University of Madrid (UPM) and IMDEA Software InstituteSpain 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Zhenjiang HuHu, Zhenjiang 
 Peking UniversityChina 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Hans HüttelHüttel, Hans 
 Department of Computer Science, Aalborg UniversityDenmark 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 J 
 Barry JayJay, Barry 
 Typed Program Analysis without Encodings 
 K 
 Chantal KellerKeller, Chantal 
 Université Paris SaclayFrance 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Kentaro KikuchiKikuchi, Kentaro 
 Tohoku University 
 Characterizations of Partial Well-Behaved Lenses 
 András KovácsKovács, András 
 University of Gothenburg and Chalmers University of Technology 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 L 
 Sam LindleyLindley, Sam 
 The University of EdinburghUnited Kingdom 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of High-level abstraction and automation (part of PEPM 2025)
Semantics-based program manipulation in the age of LLMs 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Y. Annie LiuLiu, Y. Annie 
 Stony Brook UniversityUnited States 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of Macros, lenses, and LLMs (part of PEPM 2025)
Farewell 
 Welcome 
 href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Co-chair in Chairs within the PEPM 2025-track 
 M 
 Torben MogensenMogensen, Torben 
 DIKU, University of CopenhagenDenmark 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Andreas Tor MortensenMortensen, Andreas Tor 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 N 
 Keisuke NakanoNakano, Keisuke 
 Tohoku UniversityJapan 
 Characterizations of Partial Well-Behaved Lenses 
 P 
 Jens PalsbergPalsberg, Jens 
 University of California, Los Angeles (UCLA)United States 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Brigitte PientkaPientka, Brigitte 
 McGill UniversityCanada 
 A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract) 
 Semantics-based program manipulation in the age of LLMs 
 R 
 Martin RinardRinard, Martin 
 MIT 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Tiark RompfRompf, Tiark 
 Purdue UniversityUnited States 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Nikolaj Rossander KristensenRossander Kristensen, Nikolaj 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 S 
 João SaraivaSaraiva, João 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Satnam SinghSingh, Satnam 
 GroqUnited States 
 Semantics-based program manipulation in the age of LLMs 
 The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract) 
 Peter Buus SteffensenSteffensen, Peter Buus 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 V 
 Mark van den Brandvan den Brand, Mark 
 Eindhoven University of TechnologyNetherlands 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 W 
 Cameron WongWong, Cameron 
 Harvard SEAS 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Y 
 Jeremy YallopYallop, Jeremy 
 University of CambridgeUnited Kingdom 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Mengjia YanYan, Mengjia 
 MIT 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Yuheng YangYang, Yuheng 
 MIT 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Questions? Use thehref="https://popl25.sigplan.org/contact2/pepm-2025-papers" - PEPM contact form
. 
 Important DatesAoE (UTC-12h) 
  
 Tue 21 Jan 2025 
 Workshop 
 Wed 4 Dec 2024 
 Camera ready version 
 Mon 18 Nov 2024 
 Author notification 
 Fri 18 Oct 2024 
 Submission deadline 
 Mon 14 Oct 2024 
 Abstract deadline 
 Submission Link 
 href="https://pepm25.hotcrp.com" - https://pepm25.hotcrp.com
href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Chairs
Guillaume AllaisUniversity of Strathclyde 
 United Kingdom 
 Y. Annie LiuStony Brook University 
 United States 
 Program Committee Members 
 Nada AminHarvard University 
 United States 
 Zena M. AriolaUniversity of Oregon 
 United States 
 Liang-Ting ChenAcademia Sinica 
 Taiwan 
 Youyou CongInstitute of Science Tokyo 
 Japan 
 Fritz HengleinDepartment of Computer Science, University of Copenhagen (DIKU) and Deon Digital 
 Denmark 
 href="https://popl25.sigplan.org/profile/manuelhermengildo" - Manuel HermenegildoTechnical University of Madrid (UPM) and IMDEA Software InstituteSpain 
 Zhenjiang HuPeking University 
 China 
 Chantal KellerUniversité Paris Saclay 
 France 
 András KovácsUniversity of Gothenburg and Chalmers University of Technology 
 Sam LindleyThe University of Edinburgh 
 United Kingdom 
 Torben MogensenDIKU, University of Copenhagen 
 Denmark 
 Jens PalsbergUniversity of California, Los Angeles (UCLA) 
 United States 
 Martin RinardMIT 
 Tiark RompfPurdue University 
 United States 
 João Saraiva 
 Jeremy YallopUniversity of Cambridge 
 United Kingdom 
 Mark van den BrandEindhoven University of Technology 
 Netherlands 
 xSat 5 Apr 13:23 
 href="https://popl25.sigplan.org" - POPL 2025
contact form 
 usinghref="https://conf.researchr.org" - conf.researchr.org
(href="http://yellowgrass.org/roadmap/conf.researchr.org" - v1.69.0
) 
 Support page 
 Tracks 
 href="https://popl25.sigplan.org/track/POPL-2025-artifact-evaluation" - Artifact Evaluation
 
 href="https://popl25.sigplan.org/track/POPL-2025-popl-research-papers" - POPL
 
 href="https://popl25.sigplan.org/track/POPL-2025-student-research-competition" - Student Research Competition
 
 href="https://popl25.sigplan.org/track/POPL-2025-student-volunteers" - Student Volunteers
 
 href="https://popl25.sigplan.org/track/POPL-2025-tutorials" - Tutorials
 
 href="https://popl25.sigplan.org/track/POPL-2025-workshops-and-co-located-events" - Workshops and Co-located Events
Co-hosted Conferences 
 href="https://popl25.sigplan.org/home/CPP-2025" - CPP 2025
 
 href="https://conf.researchr.org/home/VMCAI-2025" - VMCAI 2025
 
 Workshops 
 href="https://popl25.sigplan.org/home/CoqPL-2025" - CoqPL 2025
 
 href="https://popl25.sigplan.org/home/dafny-2025" - Dafny 2025
 
 href="https://popl25.sigplan.org/home/lafi-2025" - LAFI 2025
 
 href="https://popl25.sigplan.org/home/pepm-2025" - PEPM 2025
 
 href="https://popl25.sigplan.org/home/PLMW-POPL-2025" - PLMW @ POPL 2025
 
 href="https://popl25.sigplan.org/home/planqc-2025" - PLanQC 2025
 
 href="https://popl25.sigplan.org/home/prisc-2025" - PriSC 2025
 
 href="https://popl25.sigplan.org/home/tpsa-2025" - TPSA 2025
 
 href="https://popl25.sigplan.org/home/waw-2025" - WAW 2025
 
 href="https://popl25.sigplan.org/home/wits-2025" - WITS 2025
 
 Co-hosted Symposia 
 href="https://popl25.sigplan.org/home/PADL-2025" - PADL 2025
Attending 
 href="https://popl25.sigplan.org/venue/POPL-2025-venue" - Venue: Curtis Hotel Denver
 
 Supporting POPL 
 Registration 
 Information for Virtual Attendees 
 Information for Presenters 
 Requesting a Visa 
 POPL Live Streams 
 Code of Conduct 
 Sign Up 
 : 
 :

2. Website of PEPM_3: https://popl25.sigplan.org/home/pepm-2025
Website information of PEPM_3:

href="https://popl25.sigplan.org" - POPL 2025
Sun 19 - Sat 25 January 2025href="https://popl25.sigplan.org/venue/POPL-2025-venue" - Denver, Colorado, United States
Toggle navigation 
 Attending | href="https://popl25.sigplan.org/venue/POPL-2025-venue" - Venue: Curtis Hotel Denver 
 Supporting POPL 
 Registration 
 Information for Virtual Attendees 
 Information for Presenters 
 Requesting a Visa 
 POPL Live Streams 
 Code of Conduct 
 Program | href="https://popl25.sigplan.org/program/program-POPL-2025/" - POPL Program 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Your Program 
 Filter by Day | href="https://popl25.sigplan.org/program/program-POPL-2025/" - Sun 19 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Mon 20 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Tue 21 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Wed 22 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Thu 23 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Fri 24 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Sat 25 Jan 
 href="#" - Tracks | POPL 2025 
 href="https://popl25.sigplan.org/track/POPL-2025-artifact-evaluation" - Artifact Evaluation 
 href="https://popl25.sigplan.org/track/POPL-2025-popl-research-papers" - POPL 
 href="https://popl25.sigplan.org/track/POPL-2025-student-research-competition" - Student Research Competition 
 href="https://popl25.sigplan.org/track/POPL-2025-student-volunteers" - Student Volunteers 
 href="https://popl25.sigplan.org/track/POPL-2025-tutorials" - Tutorials 
 href="https://popl25.sigplan.org/track/POPL-2025-workshops-and-co-located-events" - Workshops and Co-located Events 
 Co-hosted Conferences 
 href="https://popl25.sigplan.org/home/CPP-2025" - CPP 
 href="https://conf.researchr.org/home/VMCAI-2025" - VMCAI 
 Workshops 
 href="https://popl25.sigplan.org/home/CoqPL-2025" - CoqPL 
 href="https://popl25.sigplan.org/home/dafny-2025" - Dafny 
 href="https://popl25.sigplan.org/home/lafi-2025" - LAFI 
 href="https://popl25.sigplan.org/home/pepm-2025" - PEPM 
 href="https://popl25.sigplan.org/home/PLMW-POPL-2025" - PLMW @ POPL 
 href="https://popl25.sigplan.org/home/planqc-2025" - PLanQC 
 href="https://popl25.sigplan.org/home/prisc-2025" - PriSC 
 href="https://popl25.sigplan.org/home/tpsa-2025" - TPSA 
 href="https://popl25.sigplan.org/home/waw-2025" - WAW 
 href="https://popl25.sigplan.org/home/wits-2025" - WITS 
 Co-hosted Symposia 
 href="https://popl25.sigplan.org/home/PADL-2025" - PADL 
 Organization | POPL 2025 Committees 
 Organizing Committee 
 AV Committee 
 href="https://popl25.sigplan.org/committee/POPL-2025-student-volunteers" - Student Volunteers 
 Track Committees 
 href="https://popl25.sigplan.org/committee/POPL-2025-artifact-evaluation-artifact-evaluation-committee" - Artifact Evaluation 
 href="https://popl25.sigplan.org/committee/POPL-2025-popl-research-papers-program-committee" - POPL 
 href="https://popl25.sigplan.org/committee/POPL-2025-student-research-competition-selection-committee" - Student Research Competition 
 Contributors 
 People Index 
 Co-hosted Conferences 
 CPP | Organizing Committee 
 Program Committee 
 Steering Committee 
 VMCAI | Organizing Committee 
 Program Committee 
 Artifact Evaluation Committee 
 Workshops 
 CoqPL | Program Committee 
 Dafny | Program Committee Chairs 
 Program Committee 
 Steering Committee Chairs 
 LAFI | Program Committee 
 Steering Committee 
 href="#" - PEPM | href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Chairs 
 Program Committee Members 
 PLMW @ POPL | Organizing Committee 
 href="https://popl25.sigplan.org/committee/PLMW-POPL-2025-speakers" - Speakers 
 href="https://popl25.sigplan.org/committee/PLMW-POPL-2025-panelists" - Panelists 
 PLanQC | Organizing Committee 
 Program Committee 
 PriSC | Program Committee 
 Steering Committee 
 TPSA | Organizing Committee 
 Program Committee 
 WAW | href="https://popl25.sigplan.org/committee/waw-2025-papers-organizer" - Organizers 
 Program Committee 
 WITS | Program Committee 
 Co-hosted Symposia 
 PADL | href="https://popl25.sigplan.org/committee/PADL-2025-papers-programme-chairs" - Programme Chairs 
 Program Committee 
 Search 
 Series | Series 
 href="https://conf.researchr.org/home/POPL-2026" - POPL 2026 
 POPL 2025 
 POPL 2024 
 POPL 2023 
 POPL 2022 
 POPL 2021 
 POPL 2020 
 POPL 2019 
 POPL 2018 
 POPL 2017 
 POPL 2016 
 href="https://conf.researchr.org/signin/POPL-2025/https%3A%5Es%5Espopl25.sigplan.org%5Eshome%5Espepm-2025" - Sign in 
 Sign up 
 href="https://popl25.sigplan.org" - POPL 2025
(series) /PEPM 2025 (href="https://popl25.sigplan.org/series/pepm" - series
) /The 2025 ACM SIGPLAN Workshop on Partial Evaluation and Program ManipulationPEPM 2025 
 About 
 Program 
 href="#event-overview" - Accepted Papers 
 Invited Speakers 
 Proceedings 
 People Index 
 href="#Call-for-Papers" - Call for Papers 
 The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM) has a history going back to 1991 and has been held in conjunction with POPL every year since 2006. The origin of PEPM is in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over time, PEPM has broadened its scope to include a variety of research areas centered around semantics-based program manipulation — the systematic exploitation of treating programs not only as subject to black-box execution, but also as data structures that can be generated, analyzed, and transformed while establishing or maintaining important semantic properties. 
 Scope 
 In addition to the traditional PEPM topics (see below), PEPM 2025 welcomes submissions in new domains, in particular: 
 Semantics based and machine-learning based program synthesis and program optimization. 
 Modeling, analysis, and transformation techniques for distributed and concurrent protocols and programs, such as session types, linear types, and contract specifications. 
 More generally, topics of interest for PEPM 2024 include, but are not limited to: 
 Program and model manipulation techniques such as: supercompilation, partial evaluation, fusion, on-the-fly program adaptation, active libraries, program inversion, slicing, symbolic execution, refactoring, decompilation, and obfuscation. 
 Techniques that treat programs/models as data objects including metaprogramming, generative programming, embedded domain-specific languages, program synthesis by sketching and inductive programming, staged computation, and model-driven program generation and transformation. 
 Program analysis techniques that are used to drive program/model manipulation such as: abstract interpretation, termination checking, binding-time analysis, constraint solving, type systems, automated testing and test case generation. 
 Application of the above techniques including case studies of program manipulation in real-world (industrial, open-source) projects and software development processes, descriptions of robust tools capable of effectively handling realistic applications, benchmarking. Examples of application domains include legacy program understanding and transformation, DSL implementations, visual languages and end-user programming, scientific computing, middleware frameworks and infrastructure needed for distributed and web-based applications, embedded and resource-limited computation, and security. 
 This list of categories is not exhaustive, and we encourage submissions describing new theories and applications related to semantics-based program manipulation in general. If you have a question as to whether a potential submission is within the scope of the workshop, please contact the program co-chairs, Guillaume Allais (guillaume.allais@strath.ac.uk) and Annie Liu (liu@cs.stonybrook.edu). 
 AUTHORS TAKE NOTE:The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of the conference. The official publication date affects the deadline for any patent filings related to published work. 
 Highlights 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/8/The-Ethical-Compiler-Addressing-the-Is-Ought-Gap-in-Compilation-Invited-Talk-" - The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk)William J. Bowman
href="https://popl25.sigplan.org/details/pepm-2025-papers/9/A-Type-Theoretic-Framework-for-Certified-Meta-programming-Invited-Talk-Extended-Abst" - A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract)Brigitte Pientka
href="https://popl25.sigplan.org/details/pepm-2025-papers/10/The-Missing-Diagonal-High-Level-Languages-for-Low-Level-Systems-Invited-Talk-Abstra" - The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract)Satnam Singh
Supporters 
 Plenary 
 Hide plenary sessions 
 Program Display Configuration 
 Time Zone 
 The program is currently displayed in(GMT-07:00) Mountain Time (US & Canada).Use conference time zone: (GMT-07:00) Mountain Time (US & Canada)Select other time zone 
  
 The GMT offsets shown reflect the offsetsat the moment of the conference. 
 Time Band 
 By setting a time band, the program will dim events that are outside this time window. This is useful for (virtual) conferences with a continuous program (with repeated sessions). 
 The time band will also limit the events that are included in the personal iCalendar subscription service.Display full programSpecify a time band- 
 Save 
 Close 
 ×You're viewing the program in a time zone which is different from your device's time zonechange time zone 
 Tue 21 Jan 
 Displayed time zone:Mountain Time (US & Canada)change 
  
 09:00 - 10:30 | High-level abstraction and automationhref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Sam LindleyThe University of Edinburgh 
 09:00 
 10m 
 Day opening | WelcomePEPM 
 Y. Annie LiuStony Brook University 
 09:10 
 50m 
 Keynote | The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract)PEPM 
 Satnam SinghGroq 
 DOI 
 10:00 
 30m 
 Research paper | A Type Safe Calculus for Generating Syntax-Directed EditorsRemotePEPM 
 Andreas Tor MortensenDepartment of Computer Science, Aalborg University,Benjamin BennetzenDepartment of Computer Science, Aalborg University,Nikolaj Rossander KristensenDepartment of Computer Science, Aalborg University,Peter Buus SteffensenDepartment of Computer Science, Aalborg University,Hans HüttelDepartment of Computer Science, Aalborg University,Sune Skaanning EngtorpDepartment of Computer Science, University of Copenhagen 
 DOI 
  
 10:30 - 11:00 | Breakhref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-breakroom" - Breakroom 
 10:30 
 30m 
 Coffee break | BreakCatering 
  
 11:00 - 12:30 | Language design, pedagogical tool, and staged interpreterhref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Michael HanusKiel University 
 11:00 
 45m 
 Keynote | The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk)PEPM 
 William J. BowmanUniversity of British Columbia 
 DOIPre-printhref="https://popl25.sigplan.org/details/pepm-2025-papers/8/The-Ethical-Compiler-Addressing-the-Is-Ought-Gap-in-Compilation-Invited-Talk-" - File Attached 
 11:45 
 30m 
 Research paper | Algebraic Stepper for Simple ModulesPEPM 
 Kenichi AsaiOchanomizu University,Hinano AkiyamaOchanomizu University 
 DOI 
 12:15 
 15m 
 Short-paper | Collapsing Towers for Side-Channel Security (Short Paper)PEPM 
 Cameron WongHarvard SEAS,Muhammad AbdullahMIT,Yuheng YangMIT,Mengjia YanMIT,Adam ChlipalaMassachusetts Institute of Technology,Nada AminHarvard University 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/4/Collapsing-Towers-for-Side-Channel-Security-Short-Paper-" - File Attached 
  
 12:30 - 14:00 | Lunchhref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-four-square-ballroom" - Four Square Ballroom 
 12:30 
 90m 
 Lunch | LunchCatering 
  
 12:30 - 14:00 | SIGPLAN SC Meetinghref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-virtual-only" - Virtual Only 
 12:30 
 90m 
 Meeting | SIGPLAN SC MeetingCatering 
  
 14:00 - 15:30 | Types and meta theoryhref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Kenichi AsaiOchanomizu University 
 14:00 
 45m 
 Keynote | A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract)PEPM 
 Brigitte PientkaMcGill University 
 DOI 
 14:45 
 30m 
 Research paper | Typed Program Analysis without EncodingsPEPM 
 Barry JayDOI 
 15:15 
 15m 
 Short-paper | A Fuelled Self-Reducer for System T (Short Paper)PEPM 
 Greg BrownUniversity of Edinburgh 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/1/A-Fuelled-Self-Reducer-for-System-T-Short-Paper-" - File Attached 
  
 15:30 - 16:00 | Breakhref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-breakroom" - Breakroom 
 15:30 
 30m 
 Coffee break | BreakCatering 
  
 16:00 - 17:30 | Macros, lenses, and LLMshref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Y. Annie LiuStony Brook University 
 16:00 
 15m 
 Short-paper | Type-Sensitive Algebraic Macros (Short Paper)RemotePEPM 
 April GonçalvesUniversity of Strathclyde,Robert AtkeyUniversity of Strathclyde 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/2/Type-Sensitive-Algebraic-Macros-Short-Paper-" - File Attached 
 16:15 
 30m 
 Research paper | Characterizations of Partial Well-Behaved LensesPEPM 
 Keishi HASHIBAThe University of Osaka,Keisuke NakanoTohoku University,Kazuyuki AsadaTohoku University,Kentaro KikuchiTohoku University 
 DOI 
 16:45 
 40m 
 Panel | Semantics-based program manipulation in the age of LLMsPEPM 
 William J. BowmanUniversity of British Columbia,Brigitte PientkaMcGill University,Satnam SinghGroq,Sam LindleyThe University of Edinburgh 
 17:25 
 5m 
 Day closing | FarewellPEPM 
 Y. Annie LiuStony Brook University 
 Accepted Papers 
  
 Title 
 A Fuelled Self-Reducer for System T (Short Paper)PEPM 
 Greg Brown 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/1/A-Fuelled-Self-Reducer-for-System-T-Short-Paper-" - File Attached 
 Algebraic Stepper for Simple ModulesPEPM 
 Kenichi Asai,Hinano Akiyama 
 DOI 
 A Type Safe Calculus for Generating Syntax-Directed EditorsRemotePEPM 
 Andreas Tor Mortensen,Benjamin Bennetzen,Nikolaj Rossander Kristensen,Peter Buus Steffensen,Hans Hüttel,Sune Skaanning Engtorp 
 DOI 
 A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract)PEPM 
 Brigitte Pientka 
 DOI 
 Characterizations of Partial Well-Behaved LensesPEPM 
 Keishi HASHIBA,Keisuke Nakano,Kazuyuki Asada,Kentaro Kikuchi 
 DOI 
 Collapsing Towers for Side-Channel Security (Short Paper)PEPM 
 Cameron Wong,Muhammad Abdullah,Yuheng Yang,Mengjia Yan,Adam Chlipala,Nada Amin 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/4/Collapsing-Towers-for-Side-Channel-Security-Short-Paper-" - File Attached 
 The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk)PEPM 
 William J. Bowman 
 DOIPre-printhref="https://popl25.sigplan.org/details/pepm-2025-papers/8/The-Ethical-Compiler-Addressing-the-Is-Ought-Gap-in-Compilation-Invited-Talk-" - File Attached 
 The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract)PEPM 
 Satnam Singh 
 DOI 
 Typed Program Analysis without EncodingsPEPM 
 Barry Jay 
 DOI 
 Type-Sensitive Algebraic Macros (Short Paper)RemotePEPM 
 April Gonçalves,Robert Atkey 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/2/Type-Sensitive-Algebraic-Macros-Short-Paper-" - File Attached 
 Call for Papers 
 Three kinds of submissions will be accepted: 
 Regular Research Papersshould describe new results, and will be judged on originality, correctness, significance, and clarity. Regular research papers must not exceed 12 pages. 
 Short Papersmay include tool demonstrations and presentations of exciting if not fully polished research, and of interesting academic, industrial, and open-source applications that are new or unfamiliar. Short papers must not exceed 6 pages. 
 Talk Proposalsmay propose lectures about topics of interest for PEPM, existing work representing relevant contributions, or promising contributions that are not mature enough to be proposed as papers of the other categories. Talk Proposals must not exceed 2 pages. 
 References and appendices are not included in page limits. Appendices may not necessarily be read by reviewers. Both kinds of submissions should be typeset using the two-column ‘sigplan’ sub-format of the new ‘acmart’ format available at: 
 href="http://sigplan.org/Resources/Author/" - http://sigplan.org/Resources/Author/
and submitted electronically via HotCRP:href="https://pepm25.hotcrp.com" - https://pepm25.hotcrp.com
Reviewing will be single-blind. 
 Submissions are welcome from PC members (except the two co-chairs). 
 Accepted regular research papers will appear in formal proceedings published by ACM, and be included in the ACM Digital Library. Accepted short papers do not constitute formal publications and will not appear in the proceedings. 
 At least one author of each accepted contribution must attend the workshop (physically or virtually) to present the work. In the case of tool demonstration papers, a live demonstration of the described tool is expected. 
 Invited Speakers 
 William Bowman– University of British Columbia 
 Brigitte Pientka– McGill University 
 Satnam Singh– Groq 
  
 Abstracts 
  
 The Ethical Compiler: Addressing the Is-Ought Gap in Compilation 
 William Bowman 
 The is-ought gap is a problem in moral philosophy observing that ethical judgments (“ought”) cannot be grounded purely in truth judgments (“is”): that anoughtcannot be derived from anis. This gap renders the following argument invalid: “Itistrue that type safe languages prevent bugs and that bugs cause harm, therefore yououghtto write in type safe languages.”. To validate ethical claims, we must bridge the gap between is and ought with some ethical axiom, such as “I believe oneoughtnot cause harm.”. 
 But what do ethics have to do with manipulating programs? A lot! Ethics are central to correctness! For example, suppose an algorithm infers the type ofeisBool, andeis in fact aBool; the program type checks. Is the program correct—does it behave as itought? We cannot answer this without some ethical axioms: what does the programmer believeoughtto be? 
 I believe one ought to design and implement languages ethically. We must give the programmer the ability to express their ethics—their values and beliefs about a program—in addition to its mere computational content, and build tools that respect the distinction between is and ought. This talk is a guide to ethical language design and implementation possibilities. 
 Bio 
 William J. Bowman is an Assistant Professor of computer science in the Software Practices Lab at University of British Columbia. Broadly speaking, he is interested in making it easier for programmers to communicate their intent to machines, and preserving that intent through compilation. More specifically, their research interests include secure and verified compilation, dependently typed programming, verification, meta-programming, and interoperability. His recent work examines type-preserving compilation of dependently typed programming languages like Coq, a technique that can enable preserving security and correctness invariants of verified software through compilation and statically enforcing those invariants in the low-level (assembly-like) code generated by compilers. 
  
 Cocon: A Type-Theoretic Framework for Meta-Programming 
 Brigitte Pientka 
 Meta-programming is the art of writing programs that produce or manipulate other programs. This allows programmers to automate error-prone or repetitive tasks, and exploit domain- specific knowledge to customize the generated code. Hence, meta-programming is widely used in a range of technologies: from cryptographic message authentication in secure network protocols to support reflection in proof environments such as Lean. 
 Unfortunately, writing safe meta-programs remains very challenging and sometimes frustrating, as traditionally errors in the generated code are only detected when running it, but not at the time when code is generated. To make it easier to write and maintain meta-programs, tools that allow us to detect errors during code generation - instead of when running the generated code - are essential. 
 This talk revisits Cocon, a framework for certified meta-programming. Cocon is a Martin-Löf dependent type theory for defining logics and proofs that allows us to represent domain-specific languages (DSL) within the logical framework LF and in addition write recursive programs and proofs about those DSLs using pattern matching. It is a two-level type theory where Martin-Löf type theory sits on top of the logical framework LF and supports a recursor over (contextual) LF objects. As a consequence, we can embed into LF STLC or System F, etc. and then write programs about those encodings using Cocon itself. 
 This means Cocon can serve as a target for compiling meta-programming systems -from compiling meta-programming with STLC to System F. Moreover, Cocon supports writing an evaluator for each of these sub-languages. This also allows us to reflect back our encoded sub-language and evaluate their encodings using Cocon’s evaluation strategy. 
 I will conclude with highlighting more recent research directions and challenges that build on the core ideas of Cocon and aim to support meta-programming and intensional code analysis directly in System F and Martin-Löf type theory. 
 Bio 
 Brigitte Pientka a Full Professor in the School of Computer Science at McGill University. Her main research interests lie in developing theoretical foundations of programming languages. A central question of her work is: How can we design programming languages that ensure that programs are safe and have fewer bugs? In 2018, her work on the Beluga programming language has received the Test of Time Award from International Symposium on Principles and Practice of Declarative Programming (PPDP). 
 Brigitte Pientka is a leader within the programming languages research community, and serves for example on the SIGPLAN executive committee. In particular, she is passionate about working towards overcoming systemic barriers for underrepresented groups. In 2018, she co-founded the Women in Logic workshop which provides valuable networking opportunity to female researchers and as the general chair for POPL in 2020 she introduced Mentoring Breakfasts which now are a fixture at SIGPLAN events. 
  
 The Missing Diagonal: High Level Languages for Low Level Systems 
 Satnam Singh 
 The computing community has produced many high level languages and tools for programming high level systems (e.g. Java for user interfaces) and it has produced many low level languages and tools for programming low level systems (C for operating systems, Verilog for hardware design) yet there are not many examples of high level systems that have been produced to help develop low level systems. Sometimes this is due to a suspicion that the layers of abstraction that high level systems use incur unacceptable performance overheads. However, this talk attempts to challenge that view, giving examples of high level systems that improve the designer productivity for developing low level systems which also improve the quality of verification for low level systems. 
 The talk will draw examples from the presenter’s own experience, as well as the work of others. Specific examples will include Lava and Bluespec for the design of hardware, the Silver Oak project for the co-design of a high assurance silicon root of trust, a Haskell-based DSL for programming machine learning chips, and recent work on the specification and verification of parts of a new silicon chip produced at Groq which makes use of the same Haskell DSL. 
 Bio 
 Satnam Singh is a Fellow at Groq where he applies the power of functional programming languages to the design of machine learning chips and their programming models. Satnam Singh previously worked at Google (machine learning chips, cluster management), Facebook (Android optimization), Microsoft (parallel and concurrent programming) and Xilinx (Lava DSL for hardware design). He started his career as an academic at the University of Glasgow (FPGA-based application acceleration and functional programming). 
 Proceedings 
 href="https://doi.org/10.1145/3704253" - PEPM '25: Proceedings of the 2025 ACM SIGPLAN International Workshop on Partial Evaluation and Program Manipulation
General Chairs:Guillaume AllaisUniversity of Strathclyde, United Kingdom 
 ,,Yanhong Annie LiuStony Brook University, USA 
 Publisher:Association for Computing Machinery, New York, NY, United States 
 Conference:PEPM '25: 2025 ACM SIGPLAN International Workshop on Partial Evaluation and Program Manipulation. Denver, CO, USA. 21 January 2025 
 ISBN:979-8-4007-1350-7 
 Published:10 January 2025 
 Sponsors:SIGPLAN 
 In-Cooperation:SIGACT, SIGLOG 
 PDFeReader 
 Filter 
 Role Type 
 Committee member 
 Contributor/Author 
 Session chair 
 Country 
 -unspecified- 
 Canada 
 China 
 Denmark 
 France 
 Germany 
 Japan 
 Netherlands 
 Spain 
 Taiwan 
 United Kingdom 
 United States 
 Search 
 Results(44) 
  
 A 
 Muhammad AbdullahAbdullah, Muhammad 
 MIT 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Hinano AkiyamaAkiyama, Hinano 
 Ochanomizu University 
 Algebraic Stepper for Simple Modules 
 Guillaume AllaisAllais, Guillaume 
 University of StrathclydeUnited Kingdom 
 href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Co-chair in Chairs within the PEPM 2025-track 
 Nada AminAmin, Nada 
 Harvard UniversityUnited States 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Zena M. AriolaAriola, Zena M. 
 University of OregonUnited States 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Kazuyuki AsadaAsada, Kazuyuki 
 Tohoku University 
 Characterizations of Partial Well-Behaved Lenses 
 Kenichi AsaiAsai, Kenichi 
 Ochanomizu UniversityJapan 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of Types and meta theory (part of PEPM 2025)
Algebraic Stepper for Simple Modules 
 Robert AtkeyAtkey, Robert 
 University of Strathclyde 
 Type-Sensitive Algebraic Macros (Short Paper) 
 B 
 Benjamin BennetzenBennetzen, Benjamin 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 William J. BowmanBowman, William J. 
 University of British ColumbiaCanada 
 Semantics-based program manipulation in the age of LLMs 
 The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk) 
 Greg BrownBrown, Greg 
 University of Edinburgh 
 A Fuelled Self-Reducer for System T (Short Paper) 
 C 
 Liang-Ting ChenChen, Liang-Ting 
 Academia SinicaTaiwan 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Adam ChlipalaChlipala, Adam 
 Massachusetts Institute of TechnologyUnited States 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Youyou CongCong, Youyou 
 Institute of Science TokyoJapan 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 E 
 Sune Skaanning EngtorpEngtorp, Sune Skaanning 
 Department of Computer Science, University of Copenhagen 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 G 
 April GonçalvesGonçalves, April 
 University of Strathclyde 
 Type-Sensitive Algebraic Macros (Short Paper) 
 H 
 Michael HanusHanus, Michael 
 Kiel UniversityGermany 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of Language design, pedagogical tool, and staged interpreter (part of PEPM 2025) 
 Keishi HASHIBAHASHIBA, Keishi 
 The University of OsakaJapan 
 Characterizations of Partial Well-Behaved Lenses 
 Fritz HengleinHenglein, Fritz 
 Department of Computer Science, University of Copenhagen (DIKU) and Deon DigitalDenmark 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Manuel HermenegildoHermenegildo, Manuel 
 Technical University of Madrid (UPM) and IMDEA Software InstituteSpain 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Zhenjiang HuHu, Zhenjiang 
 Peking UniversityChina 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Hans HüttelHüttel, Hans 
 Department of Computer Science, Aalborg UniversityDenmark 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 J 
 Barry JayJay, Barry 
 Typed Program Analysis without Encodings 
 K 
 Chantal KellerKeller, Chantal 
 Université Paris SaclayFrance 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Kentaro KikuchiKikuchi, Kentaro 
 Tohoku University 
 Characterizations of Partial Well-Behaved Lenses 
 András KovácsKovács, András 
 University of Gothenburg and Chalmers University of Technology 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 L 
 Sam LindleyLindley, Sam 
 The University of EdinburghUnited Kingdom 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of High-level abstraction and automation (part of PEPM 2025)
Semantics-based program manipulation in the age of LLMs 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Y. Annie LiuLiu, Y. Annie 
 Stony Brook UniversityUnited States 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of Macros, lenses, and LLMs (part of PEPM 2025)
Farewell 
 Welcome 
 href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Co-chair in Chairs within the PEPM 2025-track 
 M 
 Torben MogensenMogensen, Torben 
 DIKU, University of CopenhagenDenmark 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Andreas Tor MortensenMortensen, Andreas Tor 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 N 
 Keisuke NakanoNakano, Keisuke 
 Tohoku UniversityJapan 
 Characterizations of Partial Well-Behaved Lenses 
 P 
 Jens PalsbergPalsberg, Jens 
 University of California, Los Angeles (UCLA)United States 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Brigitte PientkaPientka, Brigitte 
 McGill UniversityCanada 
 A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract) 
 Semantics-based program manipulation in the age of LLMs 
 R 
 Martin RinardRinard, Martin 
 MIT 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Tiark RompfRompf, Tiark 
 Purdue UniversityUnited States 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Nikolaj Rossander KristensenRossander Kristensen, Nikolaj 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 S 
 João SaraivaSaraiva, João 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Satnam SinghSingh, Satnam 
 GroqUnited States 
 Semantics-based program manipulation in the age of LLMs 
 The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract) 
 Peter Buus SteffensenSteffensen, Peter Buus 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 V 
 Mark van den Brandvan den Brand, Mark 
 Eindhoven University of TechnologyNetherlands 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 W 
 Cameron WongWong, Cameron 
 Harvard SEAS 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Y 
 Jeremy YallopYallop, Jeremy 
 University of CambridgeUnited Kingdom 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Mengjia YanYan, Mengjia 
 MIT 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Yuheng YangYang, Yuheng 
 MIT 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Questions? Use thehref="https://popl25.sigplan.org/contact2/pepm-2025-papers" - PEPM contact form
. 
 Important DatesAoE (UTC-12h) 
  
 Tue 21 Jan 2025 
 Workshop 
 Wed 4 Dec 2024 
 Camera ready version 
 Mon 18 Nov 2024 
 Author notification 
 Fri 18 Oct 2024 
 Submission deadline 
 Mon 14 Oct 2024 
 Abstract deadline 
 Submission Link 
 href="https://pepm25.hotcrp.com" - https://pepm25.hotcrp.com
href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Chairs
Guillaume AllaisUniversity of Strathclyde 
 United Kingdom 
 Y. Annie LiuStony Brook University 
 United States 
 Program Committee Members 
 Nada AminHarvard University 
 United States 
 Zena M. AriolaUniversity of Oregon 
 United States 
 Liang-Ting ChenAcademia Sinica 
 Taiwan 
 Youyou CongInstitute of Science Tokyo 
 Japan 
 Fritz HengleinDepartment of Computer Science, University of Copenhagen (DIKU) and Deon Digital 
 Denmark 
 href="https://popl25.sigplan.org/profile/manuelhermengildo" - Manuel HermenegildoTechnical University of Madrid (UPM) and IMDEA Software InstituteSpain 
 Zhenjiang HuPeking University 
 China 
 Chantal KellerUniversité Paris Saclay 
 France 
 András KovácsUniversity of Gothenburg and Chalmers University of Technology 
 Sam LindleyThe University of Edinburgh 
 United Kingdom 
 Torben MogensenDIKU, University of Copenhagen 
 Denmark 
 Jens PalsbergUniversity of California, Los Angeles (UCLA) 
 United States 
 Martin RinardMIT 
 Tiark RompfPurdue University 
 United States 
 João Saraiva 
 Jeremy YallopUniversity of Cambridge 
 United Kingdom 
 Mark van den BrandEindhoven University of Technology 
 Netherlands 
 xSat 5 Apr 13:23 
 href="https://popl25.sigplan.org" - POPL 2025
contact form 
 usinghref="https://conf.researchr.org" - conf.researchr.org
(href="http://yellowgrass.org/roadmap/conf.researchr.org" - v1.69.0
) 
 Support page 
 Tracks 
 href="https://popl25.sigplan.org/track/POPL-2025-artifact-evaluation" - Artifact Evaluation
 
 href="https://popl25.sigplan.org/track/POPL-2025-popl-research-papers" - POPL
 
 href="https://popl25.sigplan.org/track/POPL-2025-student-research-competition" - Student Research Competition
 
 href="https://popl25.sigplan.org/track/POPL-2025-student-volunteers" - Student Volunteers
 
 href="https://popl25.sigplan.org/track/POPL-2025-tutorials" - Tutorials
 
 href="https://popl25.sigplan.org/track/POPL-2025-workshops-and-co-located-events" - Workshops and Co-located Events
Co-hosted Conferences 
 href="https://popl25.sigplan.org/home/CPP-2025" - CPP 2025
 
 href="https://conf.researchr.org/home/VMCAI-2025" - VMCAI 2025
 
 Workshops 
 href="https://popl25.sigplan.org/home/CoqPL-2025" - CoqPL 2025
 
 href="https://popl25.sigplan.org/home/dafny-2025" - Dafny 2025
 
 href="https://popl25.sigplan.org/home/lafi-2025" - LAFI 2025
 
 href="https://popl25.sigplan.org/home/pepm-2025" - PEPM 2025
 
 href="https://popl25.sigplan.org/home/PLMW-POPL-2025" - PLMW @ POPL 2025
 
 href="https://popl25.sigplan.org/home/planqc-2025" - PLanQC 2025
 
 href="https://popl25.sigplan.org/home/prisc-2025" - PriSC 2025
 
 href="https://popl25.sigplan.org/home/tpsa-2025" - TPSA 2025
 
 href="https://popl25.sigplan.org/home/waw-2025" - WAW 2025
 
 href="https://popl25.sigplan.org/home/wits-2025" - WITS 2025
 
 Co-hosted Symposia 
 href="https://popl25.sigplan.org/home/PADL-2025" - PADL 2025
Attending 
 href="https://popl25.sigplan.org/venue/POPL-2025-venue" - Venue: Curtis Hotel Denver
 
 Supporting POPL 
 Registration 
 Information for Virtual Attendees 
 Information for Presenters 
 Requesting a Visa 
 POPL Live Streams 
 Code of Conduct 
 Sign Up 
 : 
 :

3. Website of PEPM_3: https://popl23.sigplan.org/series/pepm
Website information of PEPM_3:

href="https://popl25.sigplan.org/home/pepm-2025" - PEPM 2025
Tue 21 Jan 2025href="https://conf.researchr.org/venue/pepm-2025/POPL-2025-venue" - Denver, Colorado, United States
co-located withhref="https://popl25.sigplan.org" - POPL 2025
Toggle navigation 
 href="https://popl23.sigplan.org/series/pepm" - Series 
 href="https://popl25.sigplan.org/home/pepm-2025" - PEPM 2025 
 All Editions | PEPM 2025 
 href="https://popl24.sigplan.org/home/pepm-2024" - PEPM 2024 
 href="https://popl23.sigplan.org/home/PEPM-2023" - PEPM 2023 
 href="https://popl22.sigplan.org/home/pepm-2022" - PEPM 2022 
 href="https://popl21.sigplan.org/home/pepm-2021" - PEPM 2021 
 href="https://popl20.sigplan.org/home/pepm-2020" - PEPM 2020 
 href="https://popl19.sigplan.org/track/pepm-2019-papers" - PEPM 2019 
 href="https://popl18.sigplan.org/track/PEPM-2018" - PEPM 2018 
 href="https://conf.researchr.org/track/pepm-2017/pepm-workshop" - PEPM 2017 
 href="https://conf.researchr.org/home/pepm-2016" - PEPM 2016 
 href="https://conf.researchr.org/home/pepm2015" - PEPM 2015 
 href="https://conf.researchr.org/signin/pepm-2025/https%3A%5Es%5Espopl23.sigplan.org%5Esseries%5Espepm" - Sign in 
 href="https://conf.researchr.org/signup/pepm-2025" - Sign up 
 PEPM 
 All Editions 
  
 Tue 21 Jan 2025 Denver, Colorado, United Stateshref="https://popl25.sigplan.org/home/pepm-2025" - PEPM 2025
withhref="https://popl25.sigplan.org" - POPL 2025
The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM) has a history going back to 1991 and has been held in conjunction with POPL every year since 2006. The origin of PEPM is in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over time, PEPM has broadened its scope to include a variety of research areas centered around semantics- ... 
 Tue 16 Jan 2024 London, United Kingdomhref="https://popl24.sigplan.org/home/pepm-2024" - PEPM 2024
withPOPL 2024 
 About The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM), which has a history going back to 1991 and has co-located with POPL every year since 2006, originates in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over the years, the scope of PEPM has expanded to include a variety of research areas centred around the theme of se ... 
 Tue 17 Jan 2023 Boston, Massachusetts, United Stateshref="https://popl23.sigplan.org/home/PEPM-2023" - PEPM 2023
withPOPL 2023 
 About The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM), which has a history going back to 1991 and has co-located with POPL every year since 2006, originates in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over the years, the scope of PEPM has expanded to include a variety of research areas centred around the theme of se ... 
 Mon 17 - Tue 18 January 2022 Philadelphia, Pennsylvania, United Stateshref="https://popl22.sigplan.org/home/pepm-2022" - PEPM 2022
withPOPL 2022 
 Livestreaming PEPM talks will be livestreamed on SIGPLAN’s YouTube channel. https://youtu.be/J5QHFdGb0GY About The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM), which has a history going back to 1991 and has co-located with POPL every year since 2006, originates in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over the ... 
 Mon 18 - Tue 19 January 2021 Onlinehref="https://popl21.sigplan.org/home/pepm-2021" - PEPM 2021
withPOPL 2021 
 The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM), which has a history going back to 1991 and has co-located with POPL every year since 2006, originates in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over the years, the scope of PEPM has expanded to include a variety of research areas centred around the theme of semantics ... 
 Sun 19 - Sat 25 January 2020 New Orleans, Louisiana, United Stateshref="https://popl20.sigplan.org/home/pepm-2020" - PEPM 2020
withPOPL 2020 
 The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM), which has a history going back to 1991 and has co-located with POPL every year since 2006, originates in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over the years, the scope of PEPM has expanded to include a variety of research areas centred around the theme of semantics ... 
 Sun 13 - Sat 19 January 2019 Cascais, Portugalhref="https://popl19.sigplan.org/track/pepm-2019-papers" - PEPM 2019
withPOPL 2019 
 The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM), which has a history going back to 1991 and has co-located with POPL every year since 2006, originates in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over the years, the scope of PEPM has expanded to include a variety of research areas centred around the theme of semantics ... 
 Mon 8 - Sat 13 January 2018 Los Angeles, California, United Stateshref="https://popl18.sigplan.org/track/PEPM-2018" - PEPM 2018
withPOPL 2018 
 The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM), which has a history going back to 1991 and has co-located with POPL every year since 2006, originates in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over the years, the scope of PEPM has expanded to include a variety of research areas centred around the theme of semantics ... 
 Mon 16 - Tue 17 January 2017href="https://conf.researchr.org/track/pepm-2017/pepm-workshop" - PEPM 2017
withPOPL 2017 
 PEPM 2017 proceedings (ACM digital library) PEPM is the premier forum for discussion of semantics-based program manipulation. The first ACM SIGPLAN PEPM symposium took place in 1991, and meetings have been held in affiliation with POPL every year since 2006. The PEPM Symposium/Workshop series aims at bringing together researchers and practitioners working in the areas of program manipulation, partial evaluatio ... 
 Mon 18 - Tue 19 January 2016 St. Petersburg, Florida, United Stateshref="https://conf.researchr.org/home/pepm-2016" - PEPM 2016
withPOPL 2016 
 The PEPM Symposium/Workshop series aims at bringing together researchers and practitioners working in the areas of program manipulation, partial evaluation, and program generation. PEPM focuses on techniques, theory, tools, and applications of analysis and manipulation of programs. The list of accepted papers is available here. In addition to regular research papers, PEPM 2016 will feature a full day of high-ca ... 
 Tue 13 - Wed 14 January 2015 Mumbai, Indiahref="https://conf.researchr.org/home/pepm2015" - PEPM 2015
The PEPM Symposium/Workshop series aims at bringing together researchers and practitioners working in the areas of program manipulation, partial evaluation, and program generation. PEPM focuses on techniques, theory, tools, and applications of analysis and manipulation of programs. PEPM 2015 will take place 13-14 January, 2015 in Mumbai, India, co-located with POPL 2015. Call for papers (invited talk by Shriram ... 
 xSat 5 Apr 13:24 
 usinghref="https://conf.researchr.org" - conf.researchr.org
(href="http://yellowgrass.org/roadmap/conf.researchr.org" - v1.69.0
) 
 href="https://conf.researchr.org/support/conf" - Support page
 
 href="https://conf.researchr.org/signup/conf" - Sign Up

4. Website of PEPM_3: https://popl25.sigplan.org/home/pepm-2025
Website information of PEPM_3:

href="https://popl25.sigplan.org" - POPL 2025
Sun 19 - Sat 25 January 2025href="https://popl25.sigplan.org/venue/POPL-2025-venue" - Denver, Colorado, United States
Toggle navigation 
 Attending | href="https://popl25.sigplan.org/venue/POPL-2025-venue" - Venue: Curtis Hotel Denver 
 Supporting POPL 
 Registration 
 Information for Virtual Attendees 
 Information for Presenters 
 Requesting a Visa 
 POPL Live Streams 
 Code of Conduct 
 Program | href="https://popl25.sigplan.org/program/program-POPL-2025/" - POPL Program 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Your Program 
 Filter by Day | href="https://popl25.sigplan.org/program/program-POPL-2025/" - Sun 19 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Mon 20 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Tue 21 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Wed 22 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Thu 23 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Fri 24 Jan 
 href="https://popl25.sigplan.org/program/program-POPL-2025/" - Sat 25 Jan 
 href="#" - Tracks | POPL 2025 
 href="https://popl25.sigplan.org/track/POPL-2025-artifact-evaluation" - Artifact Evaluation 
 href="https://popl25.sigplan.org/track/POPL-2025-popl-research-papers" - POPL 
 href="https://popl25.sigplan.org/track/POPL-2025-student-research-competition" - Student Research Competition 
 href="https://popl25.sigplan.org/track/POPL-2025-student-volunteers" - Student Volunteers 
 href="https://popl25.sigplan.org/track/POPL-2025-tutorials" - Tutorials 
 href="https://popl25.sigplan.org/track/POPL-2025-workshops-and-co-located-events" - Workshops and Co-located Events 
 Co-hosted Conferences 
 href="https://popl25.sigplan.org/home/CPP-2025" - CPP 
 href="https://conf.researchr.org/home/VMCAI-2025" - VMCAI 
 Workshops 
 href="https://popl25.sigplan.org/home/CoqPL-2025" - CoqPL 
 href="https://popl25.sigplan.org/home/dafny-2025" - Dafny 
 href="https://popl25.sigplan.org/home/lafi-2025" - LAFI 
 href="https://popl25.sigplan.org/home/pepm-2025" - PEPM 
 href="https://popl25.sigplan.org/home/PLMW-POPL-2025" - PLMW @ POPL 
 href="https://popl25.sigplan.org/home/planqc-2025" - PLanQC 
 href="https://popl25.sigplan.org/home/prisc-2025" - PriSC 
 href="https://popl25.sigplan.org/home/tpsa-2025" - TPSA 
 href="https://popl25.sigplan.org/home/waw-2025" - WAW 
 href="https://popl25.sigplan.org/home/wits-2025" - WITS 
 Co-hosted Symposia 
 href="https://popl25.sigplan.org/home/PADL-2025" - PADL 
 Organization | POPL 2025 Committees 
 Organizing Committee 
 AV Committee 
 href="https://popl25.sigplan.org/committee/POPL-2025-student-volunteers" - Student Volunteers 
 Track Committees 
 href="https://popl25.sigplan.org/committee/POPL-2025-artifact-evaluation-artifact-evaluation-committee" - Artifact Evaluation 
 href="https://popl25.sigplan.org/committee/POPL-2025-popl-research-papers-program-committee" - POPL 
 href="https://popl25.sigplan.org/committee/POPL-2025-student-research-competition-selection-committee" - Student Research Competition 
 Contributors 
 People Index 
 Co-hosted Conferences 
 CPP | Organizing Committee 
 Program Committee 
 Steering Committee 
 VMCAI | Organizing Committee 
 Program Committee 
 Artifact Evaluation Committee 
 Workshops 
 CoqPL | Program Committee 
 Dafny | Program Committee Chairs 
 Program Committee 
 Steering Committee Chairs 
 LAFI | Program Committee 
 Steering Committee 
 href="#" - PEPM | href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Chairs 
 Program Committee Members 
 PLMW @ POPL | Organizing Committee 
 href="https://popl25.sigplan.org/committee/PLMW-POPL-2025-speakers" - Speakers 
 href="https://popl25.sigplan.org/committee/PLMW-POPL-2025-panelists" - Panelists 
 PLanQC | Organizing Committee 
 Program Committee 
 PriSC | Program Committee 
 Steering Committee 
 TPSA | Organizing Committee 
 Program Committee 
 WAW | href="https://popl25.sigplan.org/committee/waw-2025-papers-organizer" - Organizers 
 Program Committee 
 WITS | Program Committee 
 Co-hosted Symposia 
 PADL | href="https://popl25.sigplan.org/committee/PADL-2025-papers-programme-chairs" - Programme Chairs 
 Program Committee 
 Search 
 Series | Series 
 href="https://conf.researchr.org/home/POPL-2026" - POPL 2026 
 POPL 2025 
 POPL 2024 
 POPL 2023 
 POPL 2022 
 POPL 2021 
 POPL 2020 
 POPL 2019 
 POPL 2018 
 POPL 2017 
 POPL 2016 
 href="https://conf.researchr.org/signin/POPL-2025/https%3A%5Es%5Espopl25.sigplan.org%5Eshome%5Espepm-2025" - Sign in 
 Sign up 
 href="https://popl25.sigplan.org" - POPL 2025
(series) /PEPM 2025 (href="https://popl25.sigplan.org/series/pepm" - series
) /The 2025 ACM SIGPLAN Workshop on Partial Evaluation and Program ManipulationPEPM 2025 
 About 
 Program 
 href="#event-overview" - Accepted Papers 
 Invited Speakers 
 Proceedings 
 People Index 
 href="#Call-for-Papers" - Call for Papers 
 The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM) has a history going back to 1991 and has been held in conjunction with POPL every year since 2006. The origin of PEPM is in the discoveries of practically useful automated techniques for evaluating programs with only partial input. Over time, PEPM has broadened its scope to include a variety of research areas centered around semantics-based program manipulation — the systematic exploitation of treating programs not only as subject to black-box execution, but also as data structures that can be generated, analyzed, and transformed while establishing or maintaining important semantic properties. 
 Scope 
 In addition to the traditional PEPM topics (see below), PEPM 2025 welcomes submissions in new domains, in particular: 
 Semantics based and machine-learning based program synthesis and program optimization. 
 Modeling, analysis, and transformation techniques for distributed and concurrent protocols and programs, such as session types, linear types, and contract specifications. 
 More generally, topics of interest for PEPM 2024 include, but are not limited to: 
 Program and model manipulation techniques such as: supercompilation, partial evaluation, fusion, on-the-fly program adaptation, active libraries, program inversion, slicing, symbolic execution, refactoring, decompilation, and obfuscation. 
 Techniques that treat programs/models as data objects including metaprogramming, generative programming, embedded domain-specific languages, program synthesis by sketching and inductive programming, staged computation, and model-driven program generation and transformation. 
 Program analysis techniques that are used to drive program/model manipulation such as: abstract interpretation, termination checking, binding-time analysis, constraint solving, type systems, automated testing and test case generation. 
 Application of the above techniques including case studies of program manipulation in real-world (industrial, open-source) projects and software development processes, descriptions of robust tools capable of effectively handling realistic applications, benchmarking. Examples of application domains include legacy program understanding and transformation, DSL implementations, visual languages and end-user programming, scientific computing, middleware frameworks and infrastructure needed for distributed and web-based applications, embedded and resource-limited computation, and security. 
 This list of categories is not exhaustive, and we encourage submissions describing new theories and applications related to semantics-based program manipulation in general. If you have a question as to whether a potential submission is within the scope of the workshop, please contact the program co-chairs, Guillaume Allais (guillaume.allais@strath.ac.uk) and Annie Liu (liu@cs.stonybrook.edu). 
 AUTHORS TAKE NOTE:The official publication date is the date the proceedings are made available in the ACM Digital Library. This date may be up to two weeks prior to the first day of the conference. The official publication date affects the deadline for any patent filings related to published work. 
 Highlights 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/8/The-Ethical-Compiler-Addressing-the-Is-Ought-Gap-in-Compilation-Invited-Talk-" - The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk)William J. Bowman
href="https://popl25.sigplan.org/details/pepm-2025-papers/9/A-Type-Theoretic-Framework-for-Certified-Meta-programming-Invited-Talk-Extended-Abst" - A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract)Brigitte Pientka
href="https://popl25.sigplan.org/details/pepm-2025-papers/10/The-Missing-Diagonal-High-Level-Languages-for-Low-Level-Systems-Invited-Talk-Abstra" - The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract)Satnam Singh
Supporters 
 Plenary 
 Hide plenary sessions 
 Program Display Configuration 
 Time Zone 
 The program is currently displayed in(GMT-07:00) Mountain Time (US & Canada).Use conference time zone: (GMT-07:00) Mountain Time (US & Canada)Select other time zone 
  
 The GMT offsets shown reflect the offsetsat the moment of the conference. 
 Time Band 
 By setting a time band, the program will dim events that are outside this time window. This is useful for (virtual) conferences with a continuous program (with repeated sessions). 
 The time band will also limit the events that are included in the personal iCalendar subscription service.Display full programSpecify a time band- 
 Save 
 Close 
 ×You're viewing the program in a time zone which is different from your device's time zonechange time zone 
 Tue 21 Jan 
 Displayed time zone:Mountain Time (US & Canada)change 
  
 09:00 - 10:30 | High-level abstraction and automationhref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Sam LindleyThe University of Edinburgh 
 09:00 
 10m 
 Day opening | WelcomePEPM 
 Y. Annie LiuStony Brook University 
 09:10 
 50m 
 Keynote | The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract)PEPM 
 Satnam SinghGroq 
 DOI 
 10:00 
 30m 
 Research paper | A Type Safe Calculus for Generating Syntax-Directed EditorsRemotePEPM 
 Andreas Tor MortensenDepartment of Computer Science, Aalborg University,Benjamin BennetzenDepartment of Computer Science, Aalborg University,Nikolaj Rossander KristensenDepartment of Computer Science, Aalborg University,Peter Buus SteffensenDepartment of Computer Science, Aalborg University,Hans HüttelDepartment of Computer Science, Aalborg University,Sune Skaanning EngtorpDepartment of Computer Science, University of Copenhagen 
 DOI 
  
 10:30 - 11:00 | Breakhref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-breakroom" - Breakroom 
 10:30 
 30m 
 Coffee break | BreakCatering 
  
 11:00 - 12:30 | Language design, pedagogical tool, and staged interpreterhref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Michael HanusKiel University 
 11:00 
 45m 
 Keynote | The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk)PEPM 
 William J. BowmanUniversity of British Columbia 
 DOIPre-printhref="https://popl25.sigplan.org/details/pepm-2025-papers/8/The-Ethical-Compiler-Addressing-the-Is-Ought-Gap-in-Compilation-Invited-Talk-" - File Attached 
 11:45 
 30m 
 Research paper | Algebraic Stepper for Simple ModulesPEPM 
 Kenichi AsaiOchanomizu University,Hinano AkiyamaOchanomizu University 
 DOI 
 12:15 
 15m 
 Short-paper | Collapsing Towers for Side-Channel Security (Short Paper)PEPM 
 Cameron WongHarvard SEAS,Muhammad AbdullahMIT,Yuheng YangMIT,Mengjia YanMIT,Adam ChlipalaMassachusetts Institute of Technology,Nada AminHarvard University 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/4/Collapsing-Towers-for-Side-Channel-Security-Short-Paper-" - File Attached 
  
 12:30 - 14:00 | Lunchhref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-four-square-ballroom" - Four Square Ballroom 
 12:30 
 90m 
 Lunch | LunchCatering 
  
 12:30 - 14:00 | SIGPLAN SC Meetinghref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-virtual-only" - Virtual Only 
 12:30 
 90m 
 Meeting | SIGPLAN SC MeetingCatering 
  
 14:00 - 15:30 | Types and meta theoryhref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Kenichi AsaiOchanomizu University 
 14:00 
 45m 
 Keynote | A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract)PEPM 
 Brigitte PientkaMcGill University 
 DOI 
 14:45 
 30m 
 Research paper | Typed Program Analysis without EncodingsPEPM 
 Barry JayDOI 
 15:15 
 15m 
 Short-paper | A Fuelled Self-Reducer for System T (Short Paper)PEPM 
 Greg BrownUniversity of Edinburgh 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/1/A-Fuelled-Self-Reducer-for-System-T-Short-Paper-" - File Attached 
  
 15:30 - 16:00 | Breakhref="https://popl25.sigplan.org/track/POPL-2025-catering" - Catering
athref="https://popl25.sigplan.org/room/POPL-2025-venue-breakroom" - Breakroom 
 15:30 
 30m 
 Coffee break | BreakCatering 
  
 16:00 - 17:30 | Macros, lenses, and LLMshref="https://popl25.sigplan.org/home/pepm-2025" - PEPM
athref="https://popl25.sigplan.org/room/POPL-2025-venue-scissors" - Scissors
 
 Chair(s):Y. Annie LiuStony Brook University 
 16:00 
 15m 
 Short-paper | Type-Sensitive Algebraic Macros (Short Paper)RemotePEPM 
 April GonçalvesUniversity of Strathclyde,Robert AtkeyUniversity of Strathclyde 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/2/Type-Sensitive-Algebraic-Macros-Short-Paper-" - File Attached 
 16:15 
 30m 
 Research paper | Characterizations of Partial Well-Behaved LensesPEPM 
 Keishi HASHIBAThe University of Osaka,Keisuke NakanoTohoku University,Kazuyuki AsadaTohoku University,Kentaro KikuchiTohoku University 
 DOI 
 16:45 
 40m 
 Panel | Semantics-based program manipulation in the age of LLMsPEPM 
 William J. BowmanUniversity of British Columbia,Brigitte PientkaMcGill University,Satnam SinghGroq,Sam LindleyThe University of Edinburgh 
 17:25 
 5m 
 Day closing | FarewellPEPM 
 Y. Annie LiuStony Brook University 
 Accepted Papers 
  
 Title 
 A Fuelled Self-Reducer for System T (Short Paper)PEPM 
 Greg Brown 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/1/A-Fuelled-Self-Reducer-for-System-T-Short-Paper-" - File Attached 
 Algebraic Stepper for Simple ModulesPEPM 
 Kenichi Asai,Hinano Akiyama 
 DOI 
 A Type Safe Calculus for Generating Syntax-Directed EditorsRemotePEPM 
 Andreas Tor Mortensen,Benjamin Bennetzen,Nikolaj Rossander Kristensen,Peter Buus Steffensen,Hans Hüttel,Sune Skaanning Engtorp 
 DOI 
 A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract)PEPM 
 Brigitte Pientka 
 DOI 
 Characterizations of Partial Well-Behaved LensesPEPM 
 Keishi HASHIBA,Keisuke Nakano,Kazuyuki Asada,Kentaro Kikuchi 
 DOI 
 Collapsing Towers for Side-Channel Security (Short Paper)PEPM 
 Cameron Wong,Muhammad Abdullah,Yuheng Yang,Mengjia Yan,Adam Chlipala,Nada Amin 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/4/Collapsing-Towers-for-Side-Channel-Security-Short-Paper-" - File Attached 
 The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk)PEPM 
 William J. Bowman 
 DOIPre-printhref="https://popl25.sigplan.org/details/pepm-2025-papers/8/The-Ethical-Compiler-Addressing-the-Is-Ought-Gap-in-Compilation-Invited-Talk-" - File Attached 
 The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract)PEPM 
 Satnam Singh 
 DOI 
 Typed Program Analysis without EncodingsPEPM 
 Barry Jay 
 DOI 
 Type-Sensitive Algebraic Macros (Short Paper)RemotePEPM 
 April Gonçalves,Robert Atkey 
 href="https://popl25.sigplan.org/details/pepm-2025-papers/2/Type-Sensitive-Algebraic-Macros-Short-Paper-" - File Attached 
 Call for Papers 
 Three kinds of submissions will be accepted: 
 Regular Research Papersshould describe new results, and will be judged on originality, correctness, significance, and clarity. Regular research papers must not exceed 12 pages. 
 Short Papersmay include tool demonstrations and presentations of exciting if not fully polished research, and of interesting academic, industrial, and open-source applications that are new or unfamiliar. Short papers must not exceed 6 pages. 
 Talk Proposalsmay propose lectures about topics of interest for PEPM, existing work representing relevant contributions, or promising contributions that are not mature enough to be proposed as papers of the other categories. Talk Proposals must not exceed 2 pages. 
 References and appendices are not included in page limits. Appendices may not necessarily be read by reviewers. Both kinds of submissions should be typeset using the two-column ‘sigplan’ sub-format of the new ‘acmart’ format available at: 
 href="http://sigplan.org/Resources/Author/" - http://sigplan.org/Resources/Author/
and submitted electronically via HotCRP:href="https://pepm25.hotcrp.com" - https://pepm25.hotcrp.com
Reviewing will be single-blind. 
 Submissions are welcome from PC members (except the two co-chairs). 
 Accepted regular research papers will appear in formal proceedings published by ACM, and be included in the ACM Digital Library. Accepted short papers do not constitute formal publications and will not appear in the proceedings. 
 At least one author of each accepted contribution must attend the workshop (physically or virtually) to present the work. In the case of tool demonstration papers, a live demonstration of the described tool is expected. 
 Invited Speakers 
 William Bowman– University of British Columbia 
 Brigitte Pientka– McGill University 
 Satnam Singh– Groq 
  
 Abstracts 
  
 The Ethical Compiler: Addressing the Is-Ought Gap in Compilation 
 William Bowman 
 The is-ought gap is a problem in moral philosophy observing that ethical judgments (“ought”) cannot be grounded purely in truth judgments (“is”): that anoughtcannot be derived from anis. This gap renders the following argument invalid: “Itistrue that type safe languages prevent bugs and that bugs cause harm, therefore yououghtto write in type safe languages.”. To validate ethical claims, we must bridge the gap between is and ought with some ethical axiom, such as “I believe oneoughtnot cause harm.”. 
 But what do ethics have to do with manipulating programs? A lot! Ethics are central to correctness! For example, suppose an algorithm infers the type ofeisBool, andeis in fact aBool; the program type checks. Is the program correct—does it behave as itought? We cannot answer this without some ethical axioms: what does the programmer believeoughtto be? 
 I believe one ought to design and implement languages ethically. We must give the programmer the ability to express their ethics—their values and beliefs about a program—in addition to its mere computational content, and build tools that respect the distinction between is and ought. This talk is a guide to ethical language design and implementation possibilities. 
 Bio 
 William J. Bowman is an Assistant Professor of computer science in the Software Practices Lab at University of British Columbia. Broadly speaking, he is interested in making it easier for programmers to communicate their intent to machines, and preserving that intent through compilation. More specifically, their research interests include secure and verified compilation, dependently typed programming, verification, meta-programming, and interoperability. His recent work examines type-preserving compilation of dependently typed programming languages like Coq, a technique that can enable preserving security and correctness invariants of verified software through compilation and statically enforcing those invariants in the low-level (assembly-like) code generated by compilers. 
  
 Cocon: A Type-Theoretic Framework for Meta-Programming 
 Brigitte Pientka 
 Meta-programming is the art of writing programs that produce or manipulate other programs. This allows programmers to automate error-prone or repetitive tasks, and exploit domain- specific knowledge to customize the generated code. Hence, meta-programming is widely used in a range of technologies: from cryptographic message authentication in secure network protocols to support reflection in proof environments such as Lean. 
 Unfortunately, writing safe meta-programs remains very challenging and sometimes frustrating, as traditionally errors in the generated code are only detected when running it, but not at the time when code is generated. To make it easier to write and maintain meta-programs, tools that allow us to detect errors during code generation - instead of when running the generated code - are essential. 
 This talk revisits Cocon, a framework for certified meta-programming. Cocon is a Martin-Löf dependent type theory for defining logics and proofs that allows us to represent domain-specific languages (DSL) within the logical framework LF and in addition write recursive programs and proofs about those DSLs using pattern matching. It is a two-level type theory where Martin-Löf type theory sits on top of the logical framework LF and supports a recursor over (contextual) LF objects. As a consequence, we can embed into LF STLC or System F, etc. and then write programs about those encodings using Cocon itself. 
 This means Cocon can serve as a target for compiling meta-programming systems -from compiling meta-programming with STLC to System F. Moreover, Cocon supports writing an evaluator for each of these sub-languages. This also allows us to reflect back our encoded sub-language and evaluate their encodings using Cocon’s evaluation strategy. 
 I will conclude with highlighting more recent research directions and challenges that build on the core ideas of Cocon and aim to support meta-programming and intensional code analysis directly in System F and Martin-Löf type theory. 
 Bio 
 Brigitte Pientka a Full Professor in the School of Computer Science at McGill University. Her main research interests lie in developing theoretical foundations of programming languages. A central question of her work is: How can we design programming languages that ensure that programs are safe and have fewer bugs? In 2018, her work on the Beluga programming language has received the Test of Time Award from International Symposium on Principles and Practice of Declarative Programming (PPDP). 
 Brigitte Pientka is a leader within the programming languages research community, and serves for example on the SIGPLAN executive committee. In particular, she is passionate about working towards overcoming systemic barriers for underrepresented groups. In 2018, she co-founded the Women in Logic workshop which provides valuable networking opportunity to female researchers and as the general chair for POPL in 2020 she introduced Mentoring Breakfasts which now are a fixture at SIGPLAN events. 
  
 The Missing Diagonal: High Level Languages for Low Level Systems 
 Satnam Singh 
 The computing community has produced many high level languages and tools for programming high level systems (e.g. Java for user interfaces) and it has produced many low level languages and tools for programming low level systems (C for operating systems, Verilog for hardware design) yet there are not many examples of high level systems that have been produced to help develop low level systems. Sometimes this is due to a suspicion that the layers of abstraction that high level systems use incur unacceptable performance overheads. However, this talk attempts to challenge that view, giving examples of high level systems that improve the designer productivity for developing low level systems which also improve the quality of verification for low level systems. 
 The talk will draw examples from the presenter’s own experience, as well as the work of others. Specific examples will include Lava and Bluespec for the design of hardware, the Silver Oak project for the co-design of a high assurance silicon root of trust, a Haskell-based DSL for programming machine learning chips, and recent work on the specification and verification of parts of a new silicon chip produced at Groq which makes use of the same Haskell DSL. 
 Bio 
 Satnam Singh is a Fellow at Groq where he applies the power of functional programming languages to the design of machine learning chips and their programming models. Satnam Singh previously worked at Google (machine learning chips, cluster management), Facebook (Android optimization), Microsoft (parallel and concurrent programming) and Xilinx (Lava DSL for hardware design). He started his career as an academic at the University of Glasgow (FPGA-based application acceleration and functional programming). 
 Proceedings 
 href="https://doi.org/10.1145/3704253" - PEPM '25: Proceedings of the 2025 ACM SIGPLAN International Workshop on Partial Evaluation and Program Manipulation
General Chairs:Guillaume AllaisUniversity of Strathclyde, United Kingdom 
 ,,Yanhong Annie LiuStony Brook University, USA 
 Publisher:Association for Computing Machinery, New York, NY, United States 
 Conference:PEPM '25: 2025 ACM SIGPLAN International Workshop on Partial Evaluation and Program Manipulation. Denver, CO, USA. 21 January 2025 
 ISBN:979-8-4007-1350-7 
 Published:10 January 2025 
 Sponsors:SIGPLAN 
 In-Cooperation:SIGACT, SIGLOG 
 PDFeReader 
 Filter 
 Role Type 
 Committee member 
 Contributor/Author 
 Session chair 
 Country 
 -unspecified- 
 Canada 
 China 
 Denmark 
 France 
 Germany 
 Japan 
 Netherlands 
 Spain 
 Taiwan 
 United Kingdom 
 United States 
 Search 
 Results(44) 
  
 A 
 Muhammad AbdullahAbdullah, Muhammad 
 MIT 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Hinano AkiyamaAkiyama, Hinano 
 Ochanomizu University 
 Algebraic Stepper for Simple Modules 
 Guillaume AllaisAllais, Guillaume 
 University of StrathclydeUnited Kingdom 
 href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Co-chair in Chairs within the PEPM 2025-track 
 Nada AminAmin, Nada 
 Harvard UniversityUnited States 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Zena M. AriolaAriola, Zena M. 
 University of OregonUnited States 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Kazuyuki AsadaAsada, Kazuyuki 
 Tohoku University 
 Characterizations of Partial Well-Behaved Lenses 
 Kenichi AsaiAsai, Kenichi 
 Ochanomizu UniversityJapan 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of Types and meta theory (part of PEPM 2025)
Algebraic Stepper for Simple Modules 
 Robert AtkeyAtkey, Robert 
 University of Strathclyde 
 Type-Sensitive Algebraic Macros (Short Paper) 
 B 
 Benjamin BennetzenBennetzen, Benjamin 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 William J. BowmanBowman, William J. 
 University of British ColumbiaCanada 
 Semantics-based program manipulation in the age of LLMs 
 The Ethical Compiler: Addressing the Is-Ought Gap in Compilation (Invited Talk) 
 Greg BrownBrown, Greg 
 University of Edinburgh 
 A Fuelled Self-Reducer for System T (Short Paper) 
 C 
 Liang-Ting ChenChen, Liang-Ting 
 Academia SinicaTaiwan 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Adam ChlipalaChlipala, Adam 
 Massachusetts Institute of TechnologyUnited States 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Youyou CongCong, Youyou 
 Institute of Science TokyoJapan 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 E 
 Sune Skaanning EngtorpEngtorp, Sune Skaanning 
 Department of Computer Science, University of Copenhagen 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 G 
 April GonçalvesGonçalves, April 
 University of Strathclyde 
 Type-Sensitive Algebraic Macros (Short Paper) 
 H 
 Michael HanusHanus, Michael 
 Kiel UniversityGermany 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of Language design, pedagogical tool, and staged interpreter (part of PEPM 2025) 
 Keishi HASHIBAHASHIBA, Keishi 
 The University of OsakaJapan 
 Characterizations of Partial Well-Behaved Lenses 
 Fritz HengleinHenglein, Fritz 
 Department of Computer Science, University of Copenhagen (DIKU) and Deon DigitalDenmark 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Manuel HermenegildoHermenegildo, Manuel 
 Technical University of Madrid (UPM) and IMDEA Software InstituteSpain 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Zhenjiang HuHu, Zhenjiang 
 Peking UniversityChina 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Hans HüttelHüttel, Hans 
 Department of Computer Science, Aalborg UniversityDenmark 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 J 
 Barry JayJay, Barry 
 Typed Program Analysis without Encodings 
 K 
 Chantal KellerKeller, Chantal 
 Université Paris SaclayFrance 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Kentaro KikuchiKikuchi, Kentaro 
 Tohoku University 
 Characterizations of Partial Well-Behaved Lenses 
 András KovácsKovács, András 
 University of Gothenburg and Chalmers University of Technology 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 L 
 Sam LindleyLindley, Sam 
 The University of EdinburghUnited Kingdom 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of High-level abstraction and automation (part of PEPM 2025)
Semantics-based program manipulation in the age of LLMs 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Y. Annie LiuLiu, Y. Annie 
 Stony Brook UniversityUnited States 
 href="https://popl25.sigplan.org/home/pepm-2025" - Session Chair of Macros, lenses, and LLMs (part of PEPM 2025)
Farewell 
 Welcome 
 href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Co-chair in Chairs within the PEPM 2025-track 
 M 
 Torben MogensenMogensen, Torben 
 DIKU, University of CopenhagenDenmark 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Andreas Tor MortensenMortensen, Andreas Tor 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 N 
 Keisuke NakanoNakano, Keisuke 
 Tohoku UniversityJapan 
 Characterizations of Partial Well-Behaved Lenses 
 P 
 Jens PalsbergPalsberg, Jens 
 University of California, Los Angeles (UCLA)United States 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Brigitte PientkaPientka, Brigitte 
 McGill UniversityCanada 
 A Type-Theoretic Framework for Certified Meta-programming (Invited Talk Extended Abstract) 
 Semantics-based program manipulation in the age of LLMs 
 R 
 Martin RinardRinard, Martin 
 MIT 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Tiark RompfRompf, Tiark 
 Purdue UniversityUnited States 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Nikolaj Rossander KristensenRossander Kristensen, Nikolaj 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 S 
 João SaraivaSaraiva, João 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Satnam SinghSingh, Satnam 
 GroqUnited States 
 Semantics-based program manipulation in the age of LLMs 
 The Missing Diagonal: High Level Languages for Low Level Systems (Invited Talk Abstract) 
 Peter Buus SteffensenSteffensen, Peter Buus 
 Department of Computer Science, Aalborg University 
 A Type Safe Calculus for Generating Syntax-Directed Editors 
 V 
 Mark van den Brandvan den Brand, Mark 
 Eindhoven University of TechnologyNetherlands 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 W 
 Cameron WongWong, Cameron 
 Harvard SEAS 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Y 
 Jeremy YallopYallop, Jeremy 
 University of CambridgeUnited Kingdom 
 Committee Member in Program Committee Members within the PEPM 2025-track 
 Mengjia YanYan, Mengjia 
 MIT 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Yuheng YangYang, Yuheng 
 MIT 
 Collapsing Towers for Side-Channel Security (Short Paper) 
 Questions? Use thehref="https://popl25.sigplan.org/contact2/pepm-2025-papers" - PEPM contact form
. 
 Important DatesAoE (UTC-12h) 
  
 Tue 21 Jan 2025 
 Workshop 
 Wed 4 Dec 2024 
 Camera ready version 
 Mon 18 Nov 2024 
 Author notification 
 Fri 18 Oct 2024 
 Submission deadline 
 Mon 14 Oct 2024 
 Abstract deadline 
 Submission Link 
 href="https://pepm25.hotcrp.com" - https://pepm25.hotcrp.com
href="https://popl25.sigplan.org/committee/pepm-2025-papers-organizing-committee" - Chairs
Guillaume AllaisUniversity of Strathclyde 
 United Kingdom 
 Y. Annie LiuStony Brook University 
 United States 
 Program Committee Members 
 Nada AminHarvard University 
 United States 
 Zena M. AriolaUniversity of Oregon 
 United States 
 Liang-Ting ChenAcademia Sinica 
 Taiwan 
 Youyou CongInstitute of Science Tokyo 
 Japan 
 Fritz HengleinDepartment of Computer Science, University of Copenhagen (DIKU) and Deon Digital 
 Denmark 
 href="https://popl25.sigplan.org/profile/manuelhermengildo" - Manuel HermenegildoTechnical University of Madrid (UPM) and IMDEA Software InstituteSpain 
 Zhenjiang HuPeking University 
 China 
 Chantal KellerUniversité Paris Saclay 
 France 
 András KovácsUniversity of Gothenburg and Chalmers University of Technology 
 Sam LindleyThe University of Edinburgh 
 United Kingdom 
 Torben MogensenDIKU, University of Copenhagen 
 Denmark 
 Jens PalsbergUniversity of California, Los Angeles (UCLA) 
 United States 
 Martin RinardMIT 
 Tiark RompfPurdue University 
 United States 
 João Saraiva 
 Jeremy YallopUniversity of Cambridge 
 United Kingdom 
 Mark van den BrandEindhoven University of Technology 
 Netherlands 
 xSat 5 Apr 13:24 
 href="https://popl25.sigplan.org" - POPL 2025
contact form 
 usinghref="https://conf.researchr.org" - conf.researchr.org
(href="http://yellowgrass.org/roadmap/conf.researchr.org" - v1.69.0
) 
 Support page 
 Tracks 
 href="https://popl25.sigplan.org/track/POPL-2025-artifact-evaluation" - Artifact Evaluation
 
 href="https://popl25.sigplan.org/track/POPL-2025-popl-research-papers" - POPL
 
 href="https://popl25.sigplan.org/track/POPL-2025-student-research-competition" - Student Research Competition
 
 href="https://popl25.sigplan.org/track/POPL-2025-student-volunteers" - Student Volunteers
 
 href="https://popl25.sigplan.org/track/POPL-2025-tutorials" - Tutorials
 
 href="https://popl25.sigplan.org/track/POPL-2025-workshops-and-co-located-events" - Workshops and Co-located Events
Co-hosted Conferences 
 href="https://popl25.sigplan.org/home/CPP-2025" - CPP 2025
 
 href="https://conf.researchr.org/home/VMCAI-2025" - VMCAI 2025
 
 Workshops 
 href="https://popl25.sigplan.org/home/CoqPL-2025" - CoqPL 2025
 
 href="https://popl25.sigplan.org/home/dafny-2025" - Dafny 2025
 
 href="https://popl25.sigplan.org/home/lafi-2025" - LAFI 2025
 
 href="https://popl25.sigplan.org/home/pepm-2025" - PEPM 2025
 
 href="https://popl25.sigplan.org/home/PLMW-POPL-2025" - PLMW @ POPL 2025
 
 href="https://popl25.sigplan.org/home/planqc-2025" - PLanQC 2025
 
 href="https://popl25.sigplan.org/home/prisc-2025" - PriSC 2025
 
 href="https://popl25.sigplan.org/home/tpsa-2025" - TPSA 2025
 
 href="https://popl25.sigplan.org/home/waw-2025" - WAW 2025
 
 href="https://popl25.sigplan.org/home/wits-2025" - WITS 2025
 
 Co-hosted Symposia 
 href="https://popl25.sigplan.org/home/PADL-2025" - PADL 2025
Attending 
 href="https://popl25.sigplan.org/venue/POPL-2025-venue" - Venue: Curtis Hotel Denver
 
 Supporting POPL 
 Registration 
 Information for Virtual Attendees 
 Information for Presenters 
 Requesting a Visa 
 POPL Live Streams 
 Code of Conduct 
 Sign Up 
 : 
 :

