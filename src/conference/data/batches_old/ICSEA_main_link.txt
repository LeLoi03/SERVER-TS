Conference ICSEA:

href="ICSEA25.html" - HOME
href="CfPICSEA25.html" - Call for Papers
CommitteesParticipationhref="SubmitICSEA25.html" - Submit a Paper
href="CameraICSEA25.html" - Camera Ready
href="RegistrationICSEA25.html" - Registration
Venuehref="TouristICSEA25.html" - Touristic Info
href="HotelTravelICSEA25.html" - Hotel and Travel
Programhref="TutorialsICSEA25.html" - Tutorials
href="ProgramICSEA25.html" - Event Program
Post Conferencehref="StatsICSEA25.html" - Statistics
href="AwardsICSEA25.html" - Awards
href="PhotosICSEA25.html" - Photos
ContactThe Twentieth International Conference on Software Engineering Advances 
 ICSEA 2025 
 September 28, 2025 to October 02, 2025 - Lisbon, Portugal 
 href="SubmitICSEA25.html" - Submit a Contribution
href="RegistrationICSEA25.html" - Registration
href="CameraICSEA25.html" - Camera Ready
Deadlines 
  
 Submission | Jun 10, 2025 
 Notification | Jul 27, 2025 
 Registration | Aug 10, 2025 
 Camera ready | Aug 24, 2025 
 Deadlinesdiffer for special tracks. Please consult the conference home page for special tracks Call for Papers (if any). 
 href="https://www.iaria.org/conferences/ICSEA.html" - Past Events
SponsorsPublication 
  
 Published by IARIA Press (operated byXpert Publishing Services) 
 Archived in the Open AccessIARIA ThinkMind Digital Library 
 Prints available atCurran Associates, Inc. 
 Authors of selected papers will be invited to submit extended versions to aIARIA Journal 
 Indexing Procedure 
 Affiliated Journals 
 Menuhref="ICSEA25.html" - HOME
href="CfPICSEA25.html" - Call for Papers
Committeeshref="TouristICSEA25.html" - Touristic Info
href="HotelTravelICSEA25.html" - Hotel and Travel
href="ProgramICSEA25.html" - Event Program
href="TutorialsICSEA25.html" - Tutorials
href="RegistrationICSEA25.html" - Registration
href="CameraICSEA25.html" - Camera Ready
href="SubmitICSEA25.html" - Submit a Paper
iaria.orgContactICSEA 2025 - The Twentieth International Conference on Software Engineering Advances 
 September 28, 2025 - October 02, 2025 
 ICSEA 2025 
 Onsite and Online Options: In order to accommodate various situations, we are offering the option for either physical presence or virtual participation (pdf slides or pre-recorded videos). 
 ISSN:2308-4235 
 ISBN:978-1-68558-296-8 
 Registered: with the Library of Congress of the United States of America (ISSN) 
 Free Access: in | ThinkMind Digital Library 
 ICSEA 2025 is colocated with the following events as part ofhref="SoftNet25.html" - SoftNet 2025 Congress
: 
 href="ICSEA25.html" - ICSEA 2025 | , The Twentieth International Conference on Software Engineering Advances 
 href="ICSNC25.html" - ICSNC 2025 | , The Twentieth International Conference on Systems and Networks Communications 
 href="CENTRIC25.html" - CENTRIC 2025 | , The Eighteenth International Conference on Advances in Human-oriented and Personalized Mechanisms, Technologies, and Services 
 href="VALID25.html" - VALID 2025 | , The Seventeenth International Conference on Advances in System Testing and Validation Lifecycle 
 href="SIMUL25.html" - SIMUL 2025 | , The Seventeenth International Conference on Advances in System Modeling and Simulation 
 href="SOTICS25.html" - SOTICS 2025 | , The Fifteenth International Conference on Social Media Technologies, Communication, and Informatics 
 href="INNOV25.html" - INNOV 2025 | , The Fourteenth International Conference on Communications, Computation, Networks and Technologies 
 href="AISyS25.html" - AISyS 2025 | , The Second International Conference on AI-based Systems and Services 
 ICSEA 2025 Steering Committee 
  
 Herwig Manaert 
 University of Antwerp 
 Belgium | Radek Koci 
 Brno University of Technology 
 Czech Republic 
 Sébastien Salva 
 University of Clermont Auvergne | LIMOS Laboratory | CNRS 
 France | José Carlos Metrôlho 
 Polytechnic Institute of Castelo Branco 
 Portugal 
 Luigi Lavazza 
 Università dell'Insubria - Varese 
 Italy | Hironori Washizaki 
 Waseda University / National Institute of Informatics / SYSTEM INFORMATION 
 Japan 
 Roy Oberhauser 
 Aalen University 
 Germany | Simona Vasilache 
 University of Tsukuba 
 Japan 
  
 Herwig Manaert 
 University of Antwerp 
 Belgium 
 Radek Koci 
 Brno University of Technology 
 Czech Republic 
 Sébastien Salva 
 University of Clermont Auvergne | LIMOS Laboratory | CNRS 
 France 
 José Carlos Metrôlho 
 Polytechnic Institute of Castelo Branco 
 Portugal 
 Luigi Lavazza 
 Università dell'Insubria - Varese 
 Italy 
 Hironori Washizaki 
 Waseda University / National Institute of Informatics / SYSTEM INFORMATION 
 Japan 
 Roy Oberhauser 
 Aalen University 
 Germany 
 Simona Vasilache 
 University of Tsukuba 
 Japan 
 ICSEA 2025 conference tracks: 
 Trends and achievements 
 Advanced agile software development; Machine learning-oriented software; Fast data-pressing algorithms; Special software for Industry 4.0 applications; Advances on software product line engineering; Software for Cyber-physical systems; Internet-of-Things (IoT)-oriented software; Software for high speed sensing data; Special software for smart cities and urban computation; Deep-software for data analytics; Software for pervasive systems; Software for (self)-configurable systems; Search-based software; Green-oriented software engineering; Symbolic analysis; Software for automated energy optimization; Mobile applications-oriented software; Interactive Big data processing; Crowd-Sourcing Programming; Open source challenges; Emphasizing non-functional requirements; Cognitive software; Accessibility requirements 
 Advances in fundamentals for software development 
 Fundamentals in software development; Software architecture, patterns, frameworks; Software analysis and model checking; Software architectural scalability; Requirements engineering and design; Software design (methodologies, patterns, experiences, views, design by contract, design by responsibilities, etc.); Software modeling (OO, non-OO, MDA, SOA, patterns, UML, etc.); Software process and workflow; Software validation and verification; Software testing and testing tools; Software implementation; Software project management (risk analysis, dependencies, etc.); Component-based software development; Service-oriented software development; Software security-based development; Aspect-oriented software development 
 Advanced mechanisms for software development 
 Software composition; Process composition and refactoring; Co-design and codeplay; Software dependencies; Plug&play software; Adaptive software; Context-sensitive software; Policy-driven software design; Software rejuvenation; Feature interaction detection and resolution; Embedded software; Parallel and distributed software 
 Advanced design tools for developing software 
 Formal specifications in software; Programming mechanisms (real-time, multi-threads, etc.); Programming techniques (feature-oriented, aspects-oriented, generative programming, agents-oriented, contextual-oriented, incremental, stratified, etc.); Requirement specification languages; Programming languages; Automation of software design and implementation; Software design with highly distributed resources (GRID); Web service based software; Scenario-based model synthesis; Merging partial behavioral models; Partial goal/requirement satisfaction 
 Software engineering for service computing (SOA and Cloud) 
 Requirements engineering methods and techniques for service computing; Design methods and techniques for service computing; Service-oriented architecture methods and techniques; Service computing technologies; Service level reuse paradigm; Cloud computing development methods; SaaS development methods and techniques; Service computing paradigm; QoS models for service computing; Testing methods for service computing; Approaches to service process improvement; Approaches to Big Data Software Engineering; Approaches to Software Engineering Analytics; Approaches to IoT Software Engineering 
 Advanced facilities for accessing software 
 Information modeling; GUI related software; Computer-aided software design; Hierarchical APIs; APIs roles in software development; Ontology support for Web Services; Rapid prototyping tools; Embedded software quality; Thread modeling; Flexible Objects; Use cases; Visual Modeling 
 Software performance 
 Software performance modeling; Software performance engineering (UML diagrams, Process algebra, Petri nets, etc.); Software performance requirements; Performance forecast for specific applications; Performance testing; Web-service based software performance; Performance of rule-based software; Methods for performance improvements; Software performance experience reports; Program failures experiences; Error ranking via correlation; Empirical evaluation of defects 
 Software security, privacy, safeness 
 Security requirements, design, and engineering; Software safety and security; Security, privacy and safeness in software; Software vulnerabilities; Assessing risks in software; Software for online banking and transactions; Software trace analysis; Software uncertainties; Dynamic detection of likely invariants; Human trust in interactive software; Memory safety; Safety software reuse; High confidence software; Trusted computing; Next generation secure computing 
 Advances in software testing 
 Formal approaches for test specifications; Advanced testing methodologies; Static and dynamic analysis; Strategies for testing nondeterministic systems; Testing software releases; Generating tests suites; Evolutionary testing of embedded systems; Algorithmic testing; Exhaustive testing; Black-box testing; Testing at the design level; Testing reactive software; Empirical evaluation 
 Specialized software advanced applications 
 Database related software; Software for disaster recovery applications; Software for mobile vehicles; Biomedical-related software; Biometrics related software; Mission critical software; Real-time software; E-health related software; Military software; Crisis-situation software; Software for Bluetooth and mobile phones; Multimedia software applications 
 Web Accessibility 
 Design approaches, techniques, and tools to support Web accessibility; Best practices for evaluation, testing reviews and repair techniques; Accessibility across the entire system lifecycle; Accessibility within e-organizations: good practices and experiences; Industry and research collaboration, learning from practice, and technology transfer; Mobile Internet-Web Accessibility; Developing user interfaces for different devices; Dealing with different interaction modalities; Web authoring guidelines and tools; Accessibility and other core areas related to the Web user experience; (UX): Usability, Findability, Valuability, Credibility, etc.; Innovations in assistive technologies for the Web; Accessible graphic formats and tools for their creation; Adaptive Web accessibility; Accessibility and information architecture; Universally accessible graphical design approaches; User Profiling; Cognitive and behavioral psychology of end user experiences and scenarios 
 Open source software 
 Open source software (OSS) methodologies; OSS development and debugging; Security in OSS; Performance of OSS; OSS roles and responsibilities; OSS incremental development; Division of labor and coordination mechanisms; Distribution of decision-making; Operational boundaries; Experience reports and lessons learned; Versioning management; Towards generalizing the OSS methodologies and practices; Open source licensing; Industrial movement towards open source 
 Agile and Lean approaches in software engineering 
 Agile software methodologies and practices (extreme programming, scrum, feature-driven, etc.); Agile modeling (serial in the large, iterative in the small); Agile model driven design; Agile methodologies for embedded software; Software metrics for agile projects; Lifecycle for agile software development; Agile user experience design; Agility via program automation; Testing into an agile environment; Agile project planning; Agile unified process 
 Software deployment and maintenance 
 Software in small and large organizations; Deploying and maintaining open source software; Software maintenance; Software assurance; Patching; Run-time vulnerability checking; Software rejuvenation; Software updates; Partial or temporary feature deprecation; Multi-point software deployment and configuration; On-line software updates 
 Softwareengineering techniques, metrics, andformalisms 
 Software reuse; Software quality metrics (complexity, empiric metrics, etc.); Software re-engineering (reverse engineering); Software composition; Software integration; Consistency checking; Real-time software development; Temporal specification; Model checking; Theorem provers; Modular reasoning; Petri Nets; Formalisms for behavior specification; Advanced techniques for autonomic components and systems 
 Business technology 
 Enterprise Content Managements (ECMs); Business Intelligence (BI); Enterprise Portals; Business Process Management (BPM); Corporate Performance Management (CPM); Enterprise Data Warehouse; Web Publishing; Cloud Computing; Virtualisation; Data Mining; Workflows; Business Rules Management (BRM); Data Capturing 
 Software economics, adoption, and education 
 Patenting software; Software licensing; Software economics; Software engineering education; Academic and industrial views on software adoption and education; Good-to-great in software adoption and improvement; Software knowledge management 
 Improvingproductivity inresearch on software engineering 
 Developing frameworks to support research; Methods and tools to improving the research environment; Supporting domain specific research needs; Teaching research skills in Computer Science; Experience reports on well developed research processes; Experience reports on empirical approaches to software engineering research; Approaches to supporting higher degree students in their research; Approaches to enlarge the research / teaching nexus to improve academics productivity; Approaches to integration between university research and industry research; Tools to support the research process; Software process improvement framework (CMMI, etc.); Quality improvement framework; Process simulation and measurement; Test improvement framework 
 Deadlines: 
  
 Submission | Jun 10, 2025 
 Notification | Jul 27, 2025 
 Registration | Aug 10, 2025 
 Camera ready | Aug 24, 2025 
 Deadlinesdiffer for special tracks. Please consult the conference home page for special tracks Call for Papers (if any). 
 Technical Co-Sponsors and Logistic Supporters 
 href="" - Copyright (c) 2006-2025, IARIA 

Call for Papers information:
href="ICSEA25.html" - HOME
href="CfPICSEA25.html" - Call for Papers
CommitteesParticipationhref="SubmitICSEA25.html" - Submit a Paper
href="CameraICSEA25.html" - Camera Ready
href="RegistrationICSEA25.html" - Registration
Venuehref="TouristICSEA25.html" - Touristic Info
href="HotelTravelICSEA25.html" - Hotel and Travel
Programhref="TutorialsICSEA25.html" - Tutorials
href="ProgramICSEA25.html" - Event Program
Post Conferencehref="StatsICSEA25.html" - Statistics
href="AwardsICSEA25.html" - Awards
href="PhotosICSEA25.html" - Photos
ContactThe Twentieth International Conference on Software Engineering Advances 
 ICSEA 2025 
 September 28, 2025 to October 02, 2025 - Lisbon, Portugal 
 href="SubmitICSEA25.html" - Submit a Contribution
href="RegistrationICSEA25.html" - Registration
href="CameraICSEA25.html" - Camera Ready
Deadlines 
  
 Submission | Jun 10, 2025 
 Notification | Jul 27, 2025 
 Registration | Aug 10, 2025 
 Camera ready | Aug 24, 2025 
 Deadlinesdiffer for special tracks. Please consult the conference home page for special tracks Call for Papers (if any). 
 href="https://www.iaria.org/conferences/ICSEA.html" - Past Events
SponsorsPublication 
  
 Published by IARIA Press (operated byXpert Publishing Services) 
 Archived in the Open AccessIARIA ThinkMind Digital Library 
 Prints available atCurran Associates, Inc. 
 Authors of selected papers will be invited to submit extended versions to aIARIA Journal 
 Indexing Procedure 
 Affiliated Journals 
 Menuhref="ICSEA25.html" - HOME
href="CfPICSEA25.html" - Call for Papers
Committeeshref="TouristICSEA25.html" - Touristic Info
href="HotelTravelICSEA25.html" - Hotel and Travel
href="ProgramICSEA25.html" - Event Program
href="TutorialsICSEA25.html" - Tutorials
href="RegistrationICSEA25.html" - Registration
href="CameraICSEA25.html" - Camera Ready
href="SubmitICSEA25.html" - Submit a Paper
iaria.orgContactICSEA 2025 - The Twentieth International Conference on Software Engineering Advances 
 September 28, 2025 - October 02, 2025 
 ICSEA 2025: Call for Papers 
 Onsite and Online Options: In order to accommodate various situations, we are offering the option for either physical presence or virtual participation (pdf slides or pre-recorded videos). 
 The International Conference on Software Engineering Advances (ICSEA 2025) continues a series of events covering a broad spectrum of software-related topics. The conference covers fundamentals on designing, implementing, testing, validating and maintaining various kinds of software. Several tracks are proposed to treat the topics from theory to practice, in terms of methodologies, design, implementation, testing, use cases, tools, and lessons learned. The conference topics cover classical and advanced methodologies, open source, agile software, as well as software deployment and software economics and education. 
 Other advanced aspects are related to on-time practical aspects, such as run-time vulnerability checking, rejuvenation process, updates partial or temporary feature deprecation, software deployment and configuration, and on-line software updates. These aspects trigger implications related to patenting, licensing, engineering education, new ways for software adoption and improvement, and ultimately, to software knowledge management. 
 There are many advanced applications requiring robust, safe, and secure software: disaster recovery applications, vehicular systems, biomedical-related software, biometrics related software, mission critical software, E-health related software, crisis-situation software. These applications require appropriate software engineering techniques, metrics and formalisms, such as, software reuse, appropriate software quality metrics, composition and integration, consistency checking, model checking, provers and reasoning. 
 The nature of research in software varies slightly with the specific discipline researchers work in, yet there is much common ground and room for a sharing of best practice, frameworks, tools, languages and methodologies. Despite the number of experts we have available, little work is done at the meta level, that is examining how we go about our research, and how this process can be improved. There are questions related to the choice of programming language, IDEs and documentation styles and standard. Reuse can be of great benefit to research projects, yet reuse of prior research projects introduces special problems that need to be mitigated. The research environment is a mix of creativity and systematic approach which leads to a creative tension that needs to be managed or at least monitored. Much of the coding in any university is undertaken by research students or young researchers. Issues of skills training, development and quality control can have significant effects on an entire department. In an industrial research setting the environment is not quite that of industry as a whole, nor does it follow the pattern set by the university. The unique approaches and issues of industrial research may hold lessons for researchers in other domains. 
 We solicit both academic, research, and industrial contributions. We welcome technical papers presenting research and practical results, position papers addressing the pros and cons of specific proposals, such as those being discussed in the standard fora or in industry consortia, survey papers addressing the key problems and solutions on any of the above topics short papers on work in progress, and panel proposals. 
 Industrial presentations are not subject to the format and content constraints of regular submissions. We expect short and long presentations that express industrial position and status. 
 Tutorials on specific related topics and panels on challenging areas are encouraged. 
 The topics suggested by the conference can be discussed in term of concepts, state of the art, research, standards, implementations, running experiments, applications, and industrial case studies. Authors are invited to submit complete unpublished papers, which are not under review in any other conference or journal in the following, but not limited to, topic areas. 
 All topics and submission formats are open to both research and industry contributions. 
 ICSEA 2025 conference tracks: 
 Trends and achievements 
 Advanced agile software development; Machine learning-oriented software; Fast data-pressing algorithms; Special software for Industry 4.0 applications; Advances on software product line engineering; Software for Cyber-physical systems; Internet-of-Things (IoT)-oriented software; Software for high speed sensing data; Special software for smart cities and urban computation; Deep-software for data analytics; Software for pervasive systems; Software for (self)-configurable systems; Search-based software; Green-oriented software engineering; Symbolic analysis; Software for automated energy optimization; Mobile applications-oriented software; Interactive Big data processing; Crowd-Sourcing Programming; Open source challenges; Emphasizing non-functional requirements; Cognitive software; Accessibility requirements 
 Advances in fundamentals for software development 
 Fundamentals in software development; Software architecture, patterns, frameworks; Software analysis and model checking; Software architectural scalability; Requirements engineering and design; Software design (methodologies, patterns, experiences, views, design by contract, design by responsibilities, etc.); Software modeling (OO, non-OO, MDA, SOA, patterns, UML, etc.); Software process and workflow; Software validation and verification; Software testing and testing tools; Software implementation; Software project management (risk analysis, dependencies, etc.); Component-based software development; Service-oriented software development; Software security-based development; Aspect-oriented software development 
 Advanced mechanisms for software development 
 Software composition; Process composition and refactoring; Co-design and codeplay; Software dependencies; Plug&play software; Adaptive software; Context-sensitive software; Policy-driven software design; Software rejuvenation; Feature interaction detection and resolution; Embedded software; Parallel and distributed software 
 Advanced design tools for developing software 
 Formal specifications in software; Programming mechanisms (real-time, multi-threads, etc.); Programming techniques (feature-oriented, aspects-oriented, generative programming, agents-oriented, contextual-oriented, incremental, stratified, etc.); Requirement specification languages; Programming languages; Automation of software design and implementation; Software design with highly distributed resources (GRID); Web service based software; Scenario-based model synthesis; Merging partial behavioral models; Partial goal/requirement satisfaction 
 Software engineering for service computing (SOA and Cloud) 
 Requirements engineering methods and techniques for service computing; Design methods and techniques for service computing; Service-oriented architecture methods and techniques; Service computing technologies; Service level reuse paradigm; Cloud computing development methods; SaaS development methods and techniques; Service computing paradigm; QoS models for service computing; Testing methods for service computing; Approaches to service process improvement; Approaches to Big Data Software Engineering; Approaches to Software Engineering Analytics; Approaches to IoT Software Engineering 
 Advanced facilities for accessing software 
 Information modeling; GUI related software; Computer-aided software design; Hierarchical APIs; APIs roles in software development; Ontology support for Web Services; Rapid prototyping tools; Embedded software quality; Thread modeling; Flexible Objects; Use cases; Visual Modeling 
 Software performance 
 Software performance modeling; Software performance engineering (UML diagrams, Process algebra, Petri nets, etc.); Software performance requirements; Performance forecast for specific applications; Performance testing; Web-service based software performance; Performance of rule-based software; Methods for performance improvements; Software performance experience reports; Program failures experiences; Error ranking via correlation; Empirical evaluation of defects 
 Software security, privacy, safeness 
 Security requirements, design, and engineering; Software safety and security; Security, privacy and safeness in software; Software vulnerabilities; Assessing risks in software; Software for online banking and transactions; Software trace analysis; Software uncertainties; Dynamic detection of likely invariants; Human trust in interactive software; Memory safety; Safety software reuse; High confidence software; Trusted computing; Next generation secure computing 
 Advances in software testing 
 Formal approaches for test specifications; Advanced testing methodologies; Static and dynamic analysis; Strategies for testing nondeterministic systems; Testing software releases; Generating tests suites; Evolutionary testing of embedded systems; Algorithmic testing; Exhaustive testing; Black-box testing; Testing at the design level; Testing reactive software; Empirical evaluation 
 Specialized software advanced applications 
 Database related software; Software for disaster recovery applications; Software for mobile vehicles; Biomedical-related software; Biometrics related software; Mission critical software; Real-time software; E-health related software; Military software; Crisis-situation software; Software for Bluetooth and mobile phones; Multimedia software applications 
 Web Accessibility 
 Design approaches, techniques, and tools to support Web accessibility; Best practices for evaluation, testing reviews and repair techniques; Accessibility across the entire system lifecycle; Accessibility within e-organizations: good practices and experiences; Industry and research collaboration, learning from practice, and technology transfer; Mobile Internet-Web Accessibility; Developing user interfaces for different devices; Dealing with different interaction modalities; Web authoring guidelines and tools; Accessibility and other core areas related to the Web user experience; (UX): Usability, Findability, Valuability, Credibility, etc.; Innovations in assistive technologies for the Web; Accessible graphic formats and tools for their creation; Adaptive Web accessibility; Accessibility and information architecture; Universally accessible graphical design approaches; User Profiling; Cognitive and behavioral psychology of end user experiences and scenarios 
 Open source software 
 Open source software (OSS) methodologies; OSS development and debugging; Security in OSS; Performance of OSS; OSS roles and responsibilities; OSS incremental development; Division of labor and coordination mechanisms; Distribution of decision-making; Operational boundaries; Experience reports and lessons learned; Versioning management; Towards generalizing the OSS methodologies and practices; Open source licensing; Industrial movement towards open source 
 Agile and Lean approaches in software engineering 
 Agile software methodologies and practices (extreme programming, scrum, feature-driven, etc.); Agile modeling (serial in the large, iterative in the small); Agile model driven design; Agile methodologies for embedded software; Software metrics for agile projects; Lifecycle for agile software development; Agile user experience design; Agility via program automation; Testing into an agile environment; Agile project planning; Agile unified process 
 Software deployment and maintenance 
 Software in small and large organizations; Deploying and maintaining open source software; Software maintenance; Software assurance; Patching; Run-time vulnerability checking; Software rejuvenation; Software updates; Partial or temporary feature deprecation; Multi-point software deployment and configuration; On-line software updates 
 Softwareengineering techniques, metrics, andformalisms 
 Software reuse; Software quality metrics (complexity, empiric metrics, etc.); Software re-engineering (reverse engineering); Software composition; Software integration; Consistency checking; Real-time software development; Temporal specification; Model checking; Theorem provers; Modular reasoning; Petri Nets; Formalisms for behavior specification; Advanced techniques for autonomic components and systems 
 Business technology 
 Enterprise Content Managements (ECMs); Business Intelligence (BI); Enterprise Portals; Business Process Management (BPM); Corporate Performance Management (CPM); Enterprise Data Warehouse; Web Publishing; Cloud Computing; Virtualisation; Data Mining; Workflows; Business Rules Management (BRM); Data Capturing 
 Software economics, adoption, and education 
 Patenting software; Software licensing; Software economics; Software engineering education; Academic and industrial views on software adoption and education; Good-to-great in software adoption and improvement; Software knowledge management 
 Improvingproductivity inresearch on software engineering 
 Developing frameworks to support research; Methods and tools to improving the research environment; Supporting domain specific research needs; Teaching research skills in Computer Science; Experience reports on well developed research processes; Experience reports on empirical approaches to software engineering research; Approaches to supporting higher degree students in their research; Approaches to enlarge the research / teaching nexus to improve academics productivity; Approaches to integration between university research and industry research; Tools to support the research process; Software process improvement framework (CMMI, etc.); Quality improvement framework; Process simulation and measurement; Test improvement framework 
 Deadlines: 
  
 Submission | Jun 10, 2025 
 Notification | Jul 27, 2025 
 Registration | Aug 10, 2025 
 Camera ready | Aug 24, 2025 
 Deadlinesdiffer for special tracks. Please consult the conference home page for special tracks Call for Papers (if any). 
 INSTRUCTION FOR THE AUTHORS 
 Authors of selected papers will be invited to submit extended versions to one of theIARIA Journals. 
 Publisher:XPS (Xpert Publishing Services) 
 Archived:ThinkMindTMDigital Library(free access) 
 Prints available atCurran Associates, Inc. 
 How to submit to appropriate indexes. 
 Only .pdf or .doc files will be accepted for paper submission. All received submissions will be acknowledged via an automated system. 
 Contribution types 
 regular papers [in the proceedings, digital library] 
 short papers (work in progress) [in the proceedings, digital library] 
 ideas: two pages [in the proceedings, digital library] 
 extended abstracts: two pages [in the proceedings, digital library] 
 posters: two pages [in the proceedings, digital library] 
 posters: slide only [slide-deck posted on | www.iaria.org | ] 
 presentations: slide only [slide-deck posted on | www.iaria.org | ] 
 demos: two pages [posted on | www.iaria.org | ] 
 FORMATS 
 Only .pdf or .doc files will be accepted for paper submission. All received submissions will be acknowledged via an automated system. 
 Final author manuscripts will be 8.5" x 11", not exceeding 6 pages; max 4 extra pages allowed at additional cost. 
 Helpful information for paper formatting for MS Word can be foundhere. 
 There is a community providedLaTeX template: the CTAN packageiaria(with full IARIA formatting rules, including IARIA citation style, but for providing citation style it is tightly bound to pdflatex+biblatex+biber). In addition, there is alsoiaria-lite(not bound to pdflatex+biblatex+biber, but compatible with any TeX stack; thus, it cannot provide the IARIA citation formattings, but only the titlepage and content-related IARIA formatting rules). Based on the iaria package, there is a minimal working example asOverleaf template. When you are using the LaTeX templates, please still adhere to the additionaleditorial rules. 
 Slides-based contributions can use the corporate/university format and style. 
 Your paper should also comply with the additionaleditorial rules. 
 Once you receive the notification of contribution acceptance, you will be provided by the publisher an online author kit with all the steps an author needs to follow to submit the final version. The author kits URL will be included in the letter of acceptance. 
 We would recommend that you should not use too many extra pages, even if you can afford the extra fees. No more than 2 contributions per event are recommended, as each contribution must be separately registered and paid for. At least one author of each accepted paper must register to ensure that the paper will be included in the conference proceedings and in the digital library, or posted on the www.iaria.org (for slide-based contributions). 
 CONTRIBUTION TYPE 
 Regular Papers(up to 6-10 page article -6 pages covered the by regular registration; max 4 extra pages allowed at additional cost- ) (oral presentation) 
 These contributions could be academic or industrial research, survey, white, implementation-oriented, architecture-oriented, white papers, etc. They will be included in the proceedings, posted in the free-accessThinkMind digital libraryand sent for indexing. Please submit the contributions following the instructions for the regular submissions using the "Submit a Paper" button and selecting the appropriate contribution type. 12-14 presentation slides are suggested. 
 Short papers(work in progress) (up to 4 pages long) (oral presentation) 
 Work-in-progress contributions are welcome. These contributions represent partial achievements of longer-term projects. They could be academic or industrial research, survey, white, implementation-oriented, architecture-oriented, white papers, etc. Please submit the contributions following the instructions for the regular submissions using the "Submit a Paper" button and selecting the contribution type as work in progress. Contributors must follow the conference deadlines, describing early research and novel skeleton ideas in the areas of the conference topics. The work will be published in the conference proceedings, posted in the free-accessThinkMind digital libraryand sent for indexing. For more details, see theWork in Progressexplanation page. 12-14 presentation slides are suggested. 
 Ideas contributions(2 pages long) (oral presentation) 
 This category is dedicated to new ideas in their very early stage. Idea contributions are expression of yet to be developed approaches, with pros/cons, not yet consolidated. Ideas contributions are intended for a debate and audience feedback. Please submit the contributions following the instructions for the regular submissions using the "Submit a Paper" button and selecting the contribution type as Idea. Contributors must follow the conference deadlines, describing early research and novel skeleton ideas in the areas of the conference topics. The work will be published in the conference proceedings, posted in the free-accessThinkMind digital libraryand sent for indexing. For more details, see theIdeasexplanation page. 12-14 presentation slides are suggested. 
 Extended abstracts(2 pages long) (oral presentation) 
 Extended abstracts summarize a long potential publication with noticeable results. It is intended for sharing yet to be written, or further on intended for a journal publication. Please submit the contributions following the instructions for the regular submissions using the "Submit a Paper" button and selecting the contribution type as Extended abstract. Contributors must follow the conference deadlines, describing early research and novel skeleton ideas in the areas of the conference topics. The work will be published in the conference proceedings, posted in the free-accessThinkMind digital libraryand sent for indexing. 12-14 presentation slides are suggested. 
 Posters(paper-based, two pages long) (oral presentation) 
 Posters are intended for ongoing research projects, concrete realizations, or industrial applications/projects presentations. The poster may be presented during sessions reserved for posters, or mixed with presentation of articles of similar topic. A two-page paper summarizes a presentation intended to be a POSTER. This allows an author to summarize a series of results and expose them via a big number of figures, graphics and tables. Please submit the contributions following the instructions for the regular submissions using the "Submit a Paper" button and selecting the contribution type as Poster Two Pages. Contributors must follow the conference deadlines, describing early research and novel skeleton ideas in the areas of the conference topics. The work will be published in the conference proceedings, posted in the free-accessThinkMind digital libraryand sent for indexing. 8-10 presentation slides are suggested. Also a big Poster is suitable, used for live discussions with the attendees, in addition to the oral presentation. 
 Posters(slide-based, only) (oral presentation) 
 Posters are intended for ongoing research projects, concrete realizations, or industrial applications/projects presentations. The poster may be presented during sessions reserved for posters, or mixed with presentation of articles of similar topic. The slides must have comprehensive comments. This type of contribution only requires a 8-10 slide-deck. Please submit the contributions following the instructions for the regular submissions using the "Submit a Paper" button and selecting the contribution type as Poster (slide-only). The slide-deck will be posted, post-event, onwww.iaria.org. 
 8-10 presentation slides are suggested. Also a big Poster is suitable, used for live discussions with the attendees, additionally to the oral presentation. 
 Presentations(slide-based, only) (oral presentation) 
 These contributions represent technical marketing/industrial/business/positioning presentations. This type of contribution only requires a 12-14 slide-deck. Please submit the contributions following the submission instructions by using the "Submit a Paper" button and selecting the contribution type as Presentation (slide-only). The slide-deck will be posted, post-event, onwww.iaria.org. 
 12-14 presentation slides are suggested. 
 Demos(two pages) [posted onwww.iaria.org] 
 Demos represent special contributions where a tool, an implementation of an application, or a freshly implemented system is presented in its alfa/beta version. It might also be intended for thsoe new application to gather the attendee opinion. A two-page summary for a demo is intended to be. It would be scheduled in special time spots, to ensure a maximum attendance from the participants. Please submit the contributions following the submission instructions by using the "Submit a Paper" button and selecting the contribution type as Demos. The Demos paper will be posted, post-event, onwww.iaria.org. 
 Tutorial proposals 
 Tutorials provide overviews of current high interest topics. Proposals should be for 2-3 hour long. Proposals must contain the title, the summary of the content, and the biography of the presenter(s). The tutorial slide decks will be posted on theIARIAsite. 
 Please send your proposals totutorial proposal 
 Panel proposals 
 The organizers encourage scientists and industry leaders to organize dedicated panels dealing with controversial and challenging topics and paradigms. Panel moderators are asked to identify their guests and manage that their appropriate talk supports timely reach our deadlines. Moderators must specifically submit an official proposal, indicating their background, panelist names, their affiliation, the topic of the panel, as well as short biographies. The panel slide deck will be posted on theIARIAsite. 
 Please send your proposals topanel proposal 
 Technical Co-Sponsors and Logistic Supporters 
 href="" - Copyright (c) 2006-2025, IARIA 

Important Dates information:
href="ICSEA25.html" - HOME
href="CfPICSEA25.html" - Call for Papers
CommitteesParticipationhref="SubmitICSEA25.html" - Submit a Paper
href="CameraICSEA25.html" - Camera Ready
href="RegistrationICSEA25.html" - Registration
Venuehref="TouristICSEA25.html" - Touristic Info
href="HotelTravelICSEA25.html" - Hotel and Travel
Programhref="TutorialsICSEA25.html" - Tutorials
href="ProgramICSEA25.html" - Event Program
Post Conferencehref="StatsICSEA25.html" - Statistics
href="AwardsICSEA25.html" - Awards
href="PhotosICSEA25.html" - Photos
ContactThe Twentieth International Conference on Software Engineering Advances 
 ICSEA 2025 
 September 28, 2025 to October 02, 2025 - Lisbon, Portugal 
 href="SubmitICSEA25.html" - Submit a Contribution
href="RegistrationICSEA25.html" - Registration
href="CameraICSEA25.html" - Camera Ready
Deadlines 
  
 Submission | Jun 10, 2025 
 Notification | Jul 27, 2025 
 Registration | Aug 10, 2025 
 Camera ready | Aug 24, 2025 
 Deadlinesdiffer for special tracks. Please consult the conference home page for special tracks Call for Papers (if any). 
 href="https://www.iaria.org/conferences/ICSEA.html" - Past Events
SponsorsPublication 
  
 Published by IARIA Press (operated byXpert Publishing Services) 
 Archived in the Open AccessIARIA ThinkMind Digital Library 
 Prints available atCurran Associates, Inc. 
 Authors of selected papers will be invited to submit extended versions to aIARIA Journal 
 Indexing Procedure 
 Affiliated Journals 
 Menuhref="ICSEA25.html" - HOME
href="CfPICSEA25.html" - Call for Papers
Committeeshref="TouristICSEA25.html" - Touristic Info
href="HotelTravelICSEA25.html" - Hotel and Travel
href="ProgramICSEA25.html" - Event Program
href="TutorialsICSEA25.html" - Tutorials
href="RegistrationICSEA25.html" - Registration
href="CameraICSEA25.html" - Camera Ready
href="SubmitICSEA25.html" - Submit a Paper
iaria.orgContactICSEA 2025 - The Twentieth International Conference on Software Engineering Advances 
 September 28, 2025 - October 02, 2025 
 ICSEA 2025 
 Onsite and Online Options: In order to accommodate various situations, we are offering the option for either physical presence or virtual participation (pdf slides or pre-recorded videos). 
 ISSN:2308-4235 
 ISBN:978-1-68558-296-8 
 Registered: with the Library of Congress of the United States of America (ISSN) 
 Free Access: in | ThinkMind Digital Library 
 ICSEA 2025 is colocated with the following events as part ofhref="SoftNet25.html" - SoftNet 2025 Congress
: 
 href="ICSEA25.html" - ICSEA 2025 | , The Twentieth International Conference on Software Engineering Advances 
 href="ICSNC25.html" - ICSNC 2025 | , The Twentieth International Conference on Systems and Networks Communications 
 href="CENTRIC25.html" - CENTRIC 2025 | , The Eighteenth International Conference on Advances in Human-oriented and Personalized Mechanisms, Technologies, and Services 
 href="VALID25.html" - VALID 2025 | , The Seventeenth International Conference on Advances in System Testing and Validation Lifecycle 
 href="SIMUL25.html" - SIMUL 2025 | , The Seventeenth International Conference on Advances in System Modeling and Simulation 
 href="SOTICS25.html" - SOTICS 2025 | , The Fifteenth International Conference on Social Media Technologies, Communication, and Informatics 
 href="INNOV25.html" - INNOV 2025 | , The Fourteenth International Conference on Communications, Computation, Networks and Technologies 
 href="AISyS25.html" - AISyS 2025 | , The Second International Conference on AI-based Systems and Services 
 ICSEA 2025 Steering Committee 
  
 Herwig Manaert 
 University of Antwerp 
 Belgium | Radek Koci 
 Brno University of Technology 
 Czech Republic 
 Sébastien Salva 
 University of Clermont Auvergne | LIMOS Laboratory | CNRS 
 France | José Carlos Metrôlho 
 Polytechnic Institute of Castelo Branco 
 Portugal 
 Luigi Lavazza 
 Università dell'Insubria - Varese 
 Italy | Hironori Washizaki 
 Waseda University / National Institute of Informatics / SYSTEM INFORMATION 
 Japan 
 Roy Oberhauser 
 Aalen University 
 Germany | Simona Vasilache 
 University of Tsukuba 
 Japan 
  
 Herwig Manaert 
 University of Antwerp 
 Belgium 
 Radek Koci 
 Brno University of Technology 
 Czech Republic 
 Sébastien Salva 
 University of Clermont Auvergne | LIMOS Laboratory | CNRS 
 France 
 José Carlos Metrôlho 
 Polytechnic Institute of Castelo Branco 
 Portugal 
 Luigi Lavazza 
 Università dell'Insubria - Varese 
 Italy 
 Hironori Washizaki 
 Waseda University / National Institute of Informatics / SYSTEM INFORMATION 
 Japan 
 Roy Oberhauser 
 Aalen University 
 Germany 
 Simona Vasilache 
 University of Tsukuba 
 Japan 
 ICSEA 2025 conference tracks: 
 Trends and achievements 
 Advanced agile software development; Machine learning-oriented software; Fast data-pressing algorithms; Special software for Industry 4.0 applications; Advances on software product line engineering; Software for Cyber-physical systems; Internet-of-Things (IoT)-oriented software; Software for high speed sensing data; Special software for smart cities and urban computation; Deep-software for data analytics; Software for pervasive systems; Software for (self)-configurable systems; Search-based software; Green-oriented software engineering; Symbolic analysis; Software for automated energy optimization; Mobile applications-oriented software; Interactive Big data processing; Crowd-Sourcing Programming; Open source challenges; Emphasizing non-functional requirements; Cognitive software; Accessibility requirements 
 Advances in fundamentals for software development 
 Fundamentals in software development; Software architecture, patterns, frameworks; Software analysis and model checking; Software architectural scalability; Requirements engineering and design; Software design (methodologies, patterns, experiences, views, design by contract, design by responsibilities, etc.); Software modeling (OO, non-OO, MDA, SOA, patterns, UML, etc.); Software process and workflow; Software validation and verification; Software testing and testing tools; Software implementation; Software project management (risk analysis, dependencies, etc.); Component-based software development; Service-oriented software development; Software security-based development; Aspect-oriented software development 
 Advanced mechanisms for software development 
 Software composition; Process composition and refactoring; Co-design and codeplay; Software dependencies; Plug&play software; Adaptive software; Context-sensitive software; Policy-driven software design; Software rejuvenation; Feature interaction detection and resolution; Embedded software; Parallel and distributed software 
 Advanced design tools for developing software 
 Formal specifications in software; Programming mechanisms (real-time, multi-threads, etc.); Programming techniques (feature-oriented, aspects-oriented, generative programming, agents-oriented, contextual-oriented, incremental, stratified, etc.); Requirement specification languages; Programming languages; Automation of software design and implementation; Software design with highly distributed resources (GRID); Web service based software; Scenario-based model synthesis; Merging partial behavioral models; Partial goal/requirement satisfaction 
 Software engineering for service computing (SOA and Cloud) 
 Requirements engineering methods and techniques for service computing; Design methods and techniques for service computing; Service-oriented architecture methods and techniques; Service computing technologies; Service level reuse paradigm; Cloud computing development methods; SaaS development methods and techniques; Service computing paradigm; QoS models for service computing; Testing methods for service computing; Approaches to service process improvement; Approaches to Big Data Software Engineering; Approaches to Software Engineering Analytics; Approaches to IoT Software Engineering 
 Advanced facilities for accessing software 
 Information modeling; GUI related software; Computer-aided software design; Hierarchical APIs; APIs roles in software development; Ontology support for Web Services; Rapid prototyping tools; Embedded software quality; Thread modeling; Flexible Objects; Use cases; Visual Modeling 
 Software performance 
 Software performance modeling; Software performance engineering (UML diagrams, Process algebra, Petri nets, etc.); Software performance requirements; Performance forecast for specific applications; Performance testing; Web-service based software performance; Performance of rule-based software; Methods for performance improvements; Software performance experience reports; Program failures experiences; Error ranking via correlation; Empirical evaluation of defects 
 Software security, privacy, safeness 
 Security requirements, design, and engineering; Software safety and security; Security, privacy and safeness in software; Software vulnerabilities; Assessing risks in software; Software for online banking and transactions; Software trace analysis; Software uncertainties; Dynamic detection of likely invariants; Human trust in interactive software; Memory safety; Safety software reuse; High confidence software; Trusted computing; Next generation secure computing 
 Advances in software testing 
 Formal approaches for test specifications; Advanced testing methodologies; Static and dynamic analysis; Strategies for testing nondeterministic systems; Testing software releases; Generating tests suites; Evolutionary testing of embedded systems; Algorithmic testing; Exhaustive testing; Black-box testing; Testing at the design level; Testing reactive software; Empirical evaluation 
 Specialized software advanced applications 
 Database related software; Software for disaster recovery applications; Software for mobile vehicles; Biomedical-related software; Biometrics related software; Mission critical software; Real-time software; E-health related software; Military software; Crisis-situation software; Software for Bluetooth and mobile phones; Multimedia software applications 
 Web Accessibility 
 Design approaches, techniques, and tools to support Web accessibility; Best practices for evaluation, testing reviews and repair techniques; Accessibility across the entire system lifecycle; Accessibility within e-organizations: good practices and experiences; Industry and research collaboration, learning from practice, and technology transfer; Mobile Internet-Web Accessibility; Developing user interfaces for different devices; Dealing with different interaction modalities; Web authoring guidelines and tools; Accessibility and other core areas related to the Web user experience; (UX): Usability, Findability, Valuability, Credibility, etc.; Innovations in assistive technologies for the Web; Accessible graphic formats and tools for their creation; Adaptive Web accessibility; Accessibility and information architecture; Universally accessible graphical design approaches; User Profiling; Cognitive and behavioral psychology of end user experiences and scenarios 
 Open source software 
 Open source software (OSS) methodologies; OSS development and debugging; Security in OSS; Performance of OSS; OSS roles and responsibilities; OSS incremental development; Division of labor and coordination mechanisms; Distribution of decision-making; Operational boundaries; Experience reports and lessons learned; Versioning management; Towards generalizing the OSS methodologies and practices; Open source licensing; Industrial movement towards open source 
 Agile and Lean approaches in software engineering 
 Agile software methodologies and practices (extreme programming, scrum, feature-driven, etc.); Agile modeling (serial in the large, iterative in the small); Agile model driven design; Agile methodologies for embedded software; Software metrics for agile projects; Lifecycle for agile software development; Agile user experience design; Agility via program automation; Testing into an agile environment; Agile project planning; Agile unified process 
 Software deployment and maintenance 
 Software in small and large organizations; Deploying and maintaining open source software; Software maintenance; Software assurance; Patching; Run-time vulnerability checking; Software rejuvenation; Software updates; Partial or temporary feature deprecation; Multi-point software deployment and configuration; On-line software updates 
 Softwareengineering techniques, metrics, andformalisms 
 Software reuse; Software quality metrics (complexity, empiric metrics, etc.); Software re-engineering (reverse engineering); Software composition; Software integration; Consistency checking; Real-time software development; Temporal specification; Model checking; Theorem provers; Modular reasoning; Petri Nets; Formalisms for behavior specification; Advanced techniques for autonomic components and systems 
 Business technology 
 Enterprise Content Managements (ECMs); Business Intelligence (BI); Enterprise Portals; Business Process Management (BPM); Corporate Performance Management (CPM); Enterprise Data Warehouse; Web Publishing; Cloud Computing; Virtualisation; Data Mining; Workflows; Business Rules Management (BRM); Data Capturing 
 Software economics, adoption, and education 
 Patenting software; Software licensing; Software economics; Software engineering education; Academic and industrial views on software adoption and education; Good-to-great in software adoption and improvement; Software knowledge management 
 Improvingproductivity inresearch on software engineering 
 Developing frameworks to support research; Methods and tools to improving the research environment; Supporting domain specific research needs; Teaching research skills in Computer Science; Experience reports on well developed research processes; Experience reports on empirical approaches to software engineering research; Approaches to supporting higher degree students in their research; Approaches to enlarge the research / teaching nexus to improve academics productivity; Approaches to integration between university research and industry research; Tools to support the research process; Software process improvement framework (CMMI, etc.); Quality improvement framework; Process simulation and measurement; Test improvement framework 
 Deadlines: 
  
 Submission | Jun 10, 2025 
 Notification | Jul 27, 2025 
 Registration | Aug 10, 2025 
 Camera ready | Aug 24, 2025 
 Deadlinesdiffer for special tracks. Please consult the conference home page for special tracks Call for Papers (if any). 
 Technical Co-Sponsors and Logistic Supporters 
 href="" - Copyright (c) 2006-2025, IARIA