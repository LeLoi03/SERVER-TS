output:
{
  "Conference dates": "June 16 - 17, 2025",
  "Year": "2025",
  "Location": "Seoul, South Korea",
  "City-State-Province": "Seoul",
  "Country": "South Korea",
  "Continent": "Asia",
  "Type": "Offline",
  "Submission Date": {
    "Paper Submission (Extended Firm Deadline)": "March 21, 2025",
    "Abstract Submission (soft, open until March 21, 2025)": "March 14, 2025",
    "Artifact Evaluation Submission": "April 28, 2025"
  },
  "Notification Date": {
    "Paper Notification": "April 21, 2025",
    "Artifact Evaluation Notification": "May 9, 2025"
  },
  "Camera-ready Date": {
    "Camera-Ready Submission": "May 12, 2025"
  },
  "Topics": "Programming Languages, Compilers, Tools, Theory, Architectures, Embedded Systems, Deep Neural Networks, Large Language Models, Autonomous Vehicles, Robots, Healthcare Applications, Multicores, GPUs, FPGAs, Distributed Systems, Productivity, Validation, Verification, Maintainability, Safety, Reliability, Performance Goals, Resource Constraints, Domain-Specific Languages, Multicore Architectures, Reconfigurable Architectures, Distributed Systems, Adaptive Systems, Real-Time Control, System Specification, Composition, Construction, Reliability, Verifiability, Security, Virtual Machines, Concurrency, Inter-processor Synchronization, Memory Management, Compiler Optimization, Low Power, Code Size, Real-Time Performance, Design Space Exploration, Auto-tuning, Hardware, System Software, Application Software, Distributed Real-time Control, Media Players, Reconfigurable Architectures, System Integration, Testing, Performance Estimation, Monitoring, Tuning, Run-time Systems, System Security, System-level Reliability, Cross-layer Optimization, Theory, Foundations, Predictability, Resource Behavior, Validation, Verification, Concurrent Systems, Distributed Systems, Model-Based Design, Code Generation, Analysis, Verification, Mathematical Foundations, Models of Computations, Embedded Architectures, Workload Analysis, Performance Evaluation, Architecture Support, Virtualization, Compiler Techniques, Debugging Tools, Power, Energy, Code Size, Predictability, Mobile Systems, IoT, Operating Systems, Compiler Tools, Energy Management, Memory Techniques, IO Techniques, Large Language Models, LLMs, Embedded System Design, Architectures, LLM-Based Debugging Tools, Resource-Constrained Environments, Program Analysis, Testing, Verification",
  "Summary": "The 26th ACM SIGPLAN/SIGBED International Conference on Languages, Compilers, and Tools for Embedded Systems (LCTES 2025) solicits papers presenting original work on programming languages, compilers, tools, theory, and architectures that help in overcoming challenges imposed by emerging applications such as deep neural network applications, large language models, autonomous vehicles, robots, and healthcare applications.",
  "Call for Papers": "# LCTES 2025: Call for Papers\n\nThe 26th ACM SIGPLAN/SIGBED International Conference on Languages, Compilers, and Tools for Embedded Systems (LCTES 2025) will be held in **Seoul, South Korea, from June 16–17, 2025**.\n\nLCTES provides a link between the programming languages and embedded systems engineering communities.  LCTES 2025 is co-located with and shares the venue and activities with PLDI 2025.\n\n## Topics\n\nOriginal contributions are solicited on the topics of interest including, but not limited to:\n\n*   Programming language challenges\n*   Domain-specific languages\n*   Features to exploit multicore, reconfigurable, and other emerging architectures\n*   Features for distributed, adaptive, and real-time control embedded systems\n*   Capabilities for specification, composition, and construction of embedded systems\n*   Language features and techniques to enhance reliability, verifiability, and security\n*   Virtual machines, concurrency, inter-processor synchronization, and memory management\n*   Compiler challenges\n*   Interaction between embedded architectures, operating systems, and compilers\n*   Interpreters, binary translation, just-in-time compilation, and split compilation\n*   Support for enhanced programmer productivity\n*   Support for enhanced debugging, profiling, and exception/interrupt handling\n*   Optimization for low power/energy, code/data size, and real-time performance\n*   Parameterized and structural compiler design space exploration and auto-tuning\n*   Tools for analysis, specification, design, and implementation, including:\n    *   Hardware, system software, application software, and their interfaces\n    *   Distributed real-time control, media players, and reconfigurable architectures\n    *   System integration and testing\n    *   Performance estimation, monitoring, and tuning\n    *   Run-time system support for embedded systems\n    *   Design space exploration tools\n    *   Support for system security and system-level reliability\n    *   Approaches for cross-layer system optimization\n*   Theory and foundations of embedded systems\n*   Predictability of resource behavior: energy, space, time\n*   Validation and verification, in particular of concurrent and distributed systems\n*   Formal foundations of model-based design as the basis for code generation, analysis, and verification\n*   Mathematical foundations for embedded systems\n*   Models of computations for embedded applications\n*   Novel embedded architectures\n*   Design and implementation of novel architectures\n*   Workload analysis and performance evaluation\n*   Architecture support for new language features, virtualization, compiler techniques, debugging tools\n*   Architectural features to improve power/energy, code/data size, and predictability\n*   Mobile systems and IoT\n*   Operating systems for mobile and IoT devices\n*   Compiler and software tools for mobile and IoT systems\n*   Energy management for mobile and IoT devices\n*   Memory and IO techniques for mobile and IoT devices\n*   Large language models (LLMs) and programming languages/compilers\n*   Impact of LLMs on embedded system design and architectures\n*   LLM-based debugging tools for embedded software\n*   Adapting LLMs for resource-constraint environment\n*   LLM for embedded systems and compilers\n*   LLM for program analysis, testing and verification.\n*   Program analysis, testing and verification for LLM\n\n## Paper Categories\n\n*   **Full paper:** 10 pages presenting original work (at most 2 additional pages for references and appendix).\n*   **Poster, work-in-progress and invited paper:** 4 pages papers presenting original ideas that are likely to trigger interesting discussions.\n\nAccepted papers in both categories will appear in the proceedings published by ACM.  This year’s LCTES will have Distinguished Paper awards selected from this year’s accepted papers.\n\n## Special Issue Invitation\n\nAccepted full papers will be invited to submit to a special issue of the ACM Transactions on Embedded Computing Systems (TECS). Papers submitted to LCTES (including the WIP papers) will be welcome to submit manuscripts to a special issue of the IEEE Embedded Systems Letters (IEEE ESL).\n\n## Submission\n\nSubmissions must be in ACM SIGPLAN subformat of the acmart format ([https://www.sigplan.org/Resources/Author/](https://www.sigplan.org/Resources/Author/)).\n\n*   Full papers: 10 pages (excluding bibliography; 2 additional pages allowed for references and appendix)\n*   Work-in-progress papers: 4 pages (excluding bibliography; 2 additional pages allowed for references and appendix)\n\nSubmissions must be in PDF format and printable on US Letter and A4-sized paper.  For papers in the work-in-progress category, add the suffix “(WIP)” to your title.\n\nTo enable double-blind reviewing, submissions must adhere to two rules:\n\n*   author names and their affiliations must be omitted;\n*   references to related work by the authors should be in the third person.\n\n## Important Dates\n\nAll deadlines are AoE (UTC-12h)\n\n*   **Abstract Submission (soft, open until March 21, 2025):** March 14, 2025\n*   **Paper Submission (Extended Firm Deadline):** March 21, 2025\n*   **Paper Notification:** April 21, 2025\n*   **Artifact Evaluation Submission:** April 28, 2025\n*   **Artifact Evaluation Notification:** May 9, 2025\n*   **Camera-Ready Submission:** May 12, 2025\n*   **Conference Dates:** June 16–17, 2025\n\n## Submission Site\n\n[https://lctes2025.hotcrp.com/](https://lctes2025.hotcrp.com/)\n\n## Contact\n\nUse the [LCTES contact form](https://pldi25.sigplan.org/contact2/LCTES-2025-main)."
}

