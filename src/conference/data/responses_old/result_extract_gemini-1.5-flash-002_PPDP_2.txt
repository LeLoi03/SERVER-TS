output:
{
  "Conference dates": "September 10 - 11, 2025",
  "Year": "2025",
  "Location": "University of Calabria, Rende, Italy",
  "City-State-Province": "Rende",
  "Country": "Italy",
  "Continent": "Europe",
  "Type": "Offline",
  "Submission Date": {
    "Title and abstract registration": "May 18, 2025",
    "Paper submission": "May 30, 2025"
  },
  "Notification Date": {
    "Author notification": "July 7, 2025"
  },
  "Camera-ready Date": {
    "Final paper version": "July 21, 2025"
  },
  "Topics": "Declarative Programming, Functional Programming, Logic Programming, Answer-Set Programming, Constraint Handling, Logical Formalisms, Concurrency, Security, Static Analysis, Verification",
  "Summary": "The 27th International Symposium on Principles and Practice of Declarative Programming (PPDP 2025) will be co-located with ICLP 2025 and held on September 10-11, 2025, at the University of Calabria, Rende, Italy. PPDP brings together researchers from the declarative programming communities to stimulate research in the use of logical formalisms and methods for analyzing, performing, specifying, and reasoning about computations.",
  "Call for Papers": "# PPDP 2025: Call for Papers\n\nThe 27th International Symposium on Principles and Practice of Declarative Programming (PPDP 2025) will be held at the **University of Calabria, Rende, Italy, on September 10-11, 2025**, collocated with ICLP 2025.\n\n## Overview\n\nPPDP brings together researchers from the declarative programming communities, including those working in the functional, logic answer-set, and constraint handling programming paradigms. The goal is to stimulate research in the use of logical formalisms and methods for analyzing, performing, specifying, and reasoning about computations, including mechanisms for concurrency, security, static analysis, and verification.\n\nAt least one of the authors of an accepted paper is expected to attend the conference and present the paper.\n\n## Topics of Interest\n\nSubmissions are invited on all topics related to declarative programming, from principles to practice, from foundations to applications. Topics of interest include, but are not limited to:\n\n*   **Language Design:** domain-specific languages; interoperability; concurrency, parallelism, and distribution; modules; functional languages; reactive languages; languages with objects; languages for quantum computing; languages inspired by biological and chemical computation; metaprogramming.\n*   **Declarative languages in artificial intelligence:** logic programming; database languages; knowledge representation languages; probabilistic languages; differentiable languages.\n*   **Implementations:** abstract machines; interpreters; compilation; compile-time and run-time optimization; memory management.\n*   **Foundations:** types; logical frameworks; monads and effects; semantics.\n*   **Analysis and Transformation:** partial evaluation; abstract interpretation; control flow; data flow; information flow; termination analysis; resource analysis; type inference and type checking; verification; validation; debugging; testing.\n*   **Tools and Applications:** programming and proof environments; verification tools; case studies in proof assistants or interactive theorem provers; certification; novel applications of declarative programming inside and outside of CS; declarative programming pearls; practical experience reports and industrial application; education.\n\n## Submission Categories\n\nSubmissions can be made in three categories:\n\n1.  **Regular Research Papers:** Must present original, unpublished research not submitted elsewhere.  Must not exceed 12 pages ACM style 2-column (including figures, but excluding bibliography). Work that already appeared in unpublished or informally published workshop proceedings may be submitted. Research papers will be judged on originality, significance, correctness, clarity, and readability.\n2.  **System Descriptions:** Must describe a working system whose description has not been published or submitted elsewhere. Must not exceed 10 pages and should contain a link to a working system. System Descriptions must be marked as such at the time of submission and will be judged on originality, significance, usefulness, clarity, and readability.\n3.  **Experience Reports:** Meant to create a body of published refereed, citable evidence where declarative programming is used in practice. Must not exceed 5 pages including references. Experience Reports must be marked as such at the time of submission and need not report original research results. They will be judged on significance, usefulness, clarity, and readability.\n\n## Submission Guidelines\n\n*   Submissions will be made via EasyChair: [https://easychair.org/conferences/?conf=iclp25](https://easychair.org/conferences/?conf=iclp25) (select PPDP track).\n*   For each paper category, you must use the most recent version of the Current ACM Master Template. You must use the LaTeX sigconf proceedings template.\n*   Authors should note [ACM’s statement on author’s rights](http://authors.acm.org/) which apply to final papers. Submitted papers should meet the requirements of ACM’s plagiarism policy.\n\n## Important Dates\n\n*   **Title and abstract registration:** May 18, 2025 (AoE)\n*   **Paper submission:** May 30, 2025 (AoE)\n*   **Author notification:** July 7, 2025\n*   **Final paper version:** July 21, 2025"
}

