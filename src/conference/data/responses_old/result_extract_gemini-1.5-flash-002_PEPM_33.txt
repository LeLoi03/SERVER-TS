output:
{
  "Conference dates": "January 21, 2025",
  "Year": "2025",
  "Location": "Curtis Hotel Denver, Denver, Colorado, United States",
  "City-State-Province": "Denver, Colorado",
  "Country": "United States",
  "Continent": "North America",
  "Type": "Offline",
  "Submission Date": {
    "Submission deadline": "October 18, 2024",
    "Camera ready version": "December 4, 2024"
  },
  "Notification Date": {
    "Author notification": "November 18, 2024"
  },
  "Topics": "Partial Evaluation, Program Manipulation, Program and model manipulation techniques, Techniques that treat programs/models as data objects, Program analysis techniques, Application of the above techniques",
  "Publisher": "ACM",
  "Summary": "The ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM) has a history going back to 1991 and has been held in conjunction with POPL every year since 2006. PEPM 2025 will be held on January 21, 2025, at the Curtis Hotel Denver in Denver, Colorado, USA.  The workshop welcomes submissions in new domains, in particular semantics based and machine-learning based program synthesis and program optimization, and modeling, analysis, and transformation techniques for distributed and concurrent protocols and programs.",
  "Call for Papers": "# PEPM 2025: Call for Papers\n\nThe 2025 ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation (PEPM 2025) will be held on **January 21, 2025**, at the **Curtis Hotel Denver** in **Denver, Colorado, USA**.\n\n## Scope\n\nPEPM 2025 welcomes submissions in new domains, in particular:\n\n*   Semantics based and machine-learning based program synthesis and program optimization.\n*   Modeling, analysis, and transformation techniques for distributed and concurrent protocols and programs, such as session types, linear types, and contract specifications.\n\nMore generally, topics of interest include, but are not limited to:\n\n*   Program and model manipulation techniques such as: supercompilation, partial evaluation, fusion, on-the-fly program adaptation, active libraries, program inversion, slicing, symbolic execution, refactoring, decompilation, and obfuscation.\n*   Techniques that treat programs/models as data objects including metaprogramming, generative programming, embedded domain-specific languages, program synthesis by sketching and inductive programming, staged computation, and model-driven program generation and transformation.\n*   Program analysis techniques that are used to drive program/model manipulation such as: abstract interpretation, termination checking, binding-time analysis, constraint solving, type systems, automated testing and test case generation.\n*   Application of the above techniques including case studies of program manipulation in real-world (industrial, open-source) projects and software development processes, descriptions of robust tools capable of effectively handling realistic applications, benchmarking. Examples of application domains include legacy program understanding and transformation, DSL implementations, visual languages and end-user programming, scientific computing, middleware frameworks and infrastructure needed for distributed and web-based applications, embedded and resource-limited computation, and security.\n\n## Submission Guidelines\n\nThree kinds of submissions will be accepted:\n\n1.  **Regular Research Papers:** should describe new results, and will be judged on originality, correctness, significance, and clarity. Regular research papers must not exceed 12 pages.\n2.  **Short Papers:** may include tool demonstrations and presentations of exciting if not fully polished research, and of interesting academic, industrial, and open-source applications that are new or unfamiliar. Short papers must not exceed 6 pages.\n3.  **Talk Proposals:** may propose lectures about topics of interest for PEPM, existing work representing relevant contributions, or promising contributions that are not mature enough to be proposed as papers of the other categories. Talk Proposals must not exceed 2 pages.\n\nReferences and appendices are not included in page limits. Appendices may not necessarily be read by reviewers. Both kinds of submissions should be typeset using the two-column ‘sigplan’ sub-format of the new ‘acmart’ format available at: [http://sigplan.org/Resources/Author/](http://sigplan.org/Resources/Author/).\n\nSubmissions are handled electronically via HotCRP: [https://pepm25.hotcrp.com](https://pepm25.hotcrp.com)\n\nReviewing will be single-blind. Submissions are welcome from PC members (except the two co-chairs).\n\nAccepted regular research papers will appear in formal proceedings published by ACM, and be included in the ACM Digital Library. Accepted short papers do not constitute formal publications and will not appear in the proceedings.\n\nAt least one author of each accepted contribution must attend the workshop (physically or virtually) to present the work. In the case of tool demonstration papers, a live demonstration of the described tool is expected.\n\n## Important Dates (AoE)\n\n*   **Abstract deadline:** October 14, 2024\n*   **Submission deadline:** October 18, 2024\n*   **Author notification:** November 18, 2024\n*   **Camera ready version:** December 4, 2024\n*   **Workshop:** January 21, 2025\n\n## Invited Speakers\n\n*   William Bowman – University of British Columbia\n*   Brigitte Pientka – McGill University\n*   Satnam Singh – Groq\n\n## Chairs\n\n*   Guillaume Allais, University of Strathclyde, United Kingdom\n*   Y. Annie Liu, Stony Brook University, USA"
}

