output:
{
  "Conference dates": "April 27 - 28, 2025",
  "Year": "2025",
  "Location": "Ottawa, Ontario, Canada",
  "City-State-Province": "Ottawa, Ontario",
  "Country": "Canada",
  "Continent": "North America",
  "Type": "Offline",
  "Submission Date": {
    "Papers": "November 9, 2024"
  },
  "Notification Date": {
    "Notifications": "January 12, 2025"
  },
  "Camera-ready Date": {
    "Camera-Ready": "February 5, 2025"
  },
  "Topics": "Software Engineering for AI, System and software requirements, Data management, System and software architecture, Integration of AI and software development processes, System and software nonfunctional properties, Collaboration, organizational, and management practices, Infrastructures to support development of AI systems",
  "Summary": "The CAIN 2025 conference will be co-located with ICSE 2025 in Ottawa, Canada, from April 27-28, 2025. CAIN 2025 invites submissions of research and experience papers focusing on Software Engineering for AI—improving the development of AI-based systems throughout the full life cycle.",
  "Call for Papers": "# CAIN 2025: Call for Submissions\n\nThe Conference on AI in Software Engineering (CAIN 2025) will be co-located with ICSE 2025 in **Ottawa, Canada, from April 27-28, 2025**.\n\nCAIN 2025 invites submissions of research and experience papers in two categories:\n\n*   **Long paper:** Up to 10 pages plus a maximum of 2 pages for references.\n*   **Short paper:** Up to 5 pages plus a maximum of 1 page for references.\n\n## Submission Categories\n\nWhen submitting, authors are asked to classify their papers as either research or experience papers. Please use the following guidance to determine the appropriate category:\n\n*   **Research Papers:** Should primarily focus on research contributions, such as addressing a hypothesis, presenting novel methods, or offering theoretical insights. These papers contribute new findings to the field and advance the state of knowledge in software engineering for AI.\n*   **Experience Papers:** Should emphasize insights from practical application, case studies, or collaboration with industry. These papers highlight lessons learned, real-world implementations, or actionable insights that benefit practitioners and the industry.\n\nIf you’re uncertain, consider whether the main contribution is advancing research knowledge (research paper) or practical understanding (experience paper).\n\n## Scope and Topics of Interest\n\nThe area of interest for CAIN is Software Engineering for AI — improving the development of AI-based systems throughout the full life cycle. Topics include, but are not limited to:\n\n*   System and software requirements and their relationship to AI/ML modeling.\n*   Data management ensuring relevance and efficiency related to business goals.\n*   System and software architecture for AI-enabled systems.\n*   Integration of AI and software development processes into the AI system development life cycle, including continuous integration and deployment, and system and software evolution.\n*   Ensuring and managing system and software nonfunctional properties and their relationship to AI/ML properties, including runtime properties such as performance, safety, security, and reliability; and life-cycle properties including reusability, maintainability and evolution.\n*   Collaboration, organizational, and management practices for a successful development of AI-enabled systems.\n*   Building effective infrastructures to support development of AI systems and components.\n\n## Submission Form\n\nResearch and experience papers should be submitted to [HotCrp](https://icse2025-cain-research.hotcrp.com/). The submission deadline is firm, no extensions.\n\n## Submission Requirements\n\n*   Page limit is 10 pages plus 2 additional pages of references for long papers and 5 pages plus 1 additional page for references for short papers.\n*   Submissions must be unpublished original work and should not be under review or submitted elsewhere while being under consideration.\n*   By submitting to CAIN, authors acknowledge that they are aware of and agree to be bound by the ACM Policy and Procedures on Plagiarism and IEEE Plagiarism FAQ. The authors also acknowledge that they conform to the authorship policy of the ACM and the authorship policy of the IEEE.\n*   Paper review will employ a double-anonymous review process. Thus, no submission may reveal its authors’ identities. The authors must make every effort to honor the double-anonymous review process.\n*   Submissions must conform to the IEEE conference proceedings template.\n\n## Accepted Papers\n\n*   Addressing Quality Challenges in Deep Learning: The Role of MLOps and Domain Knowledge\n*   An AI-driven Requirements Engineering Framework Tailored for Evaluating AI-Based Software\n*   Approach Towards Semi-Automated Certification for Low Criticality ML-Enabled Airborne Applications\n*   Bringing Machine Learning Models Beyond the Experimental Stage with Explainable AI\n*   DDPT: Diffusion Driven Prompt Tuning for Large Language Model Code Generation\n*   Debugging and Runtime Analysis of Neural Networks with VLMs (A Case Study)\n*   Designing and implementing LLM guardrails components in production environments\n*   Developing Multi-Agent LLM Applications through Continuous Human-LLM Co-Programming\n*   Engineering LLM Powered Multi-agent Framework for Autonomous CloudOps\n*   From Hazard Identification to Control Design: Proactive and AI-Supported Safety Engineering for ML-powered Systems\n*   Generating and Verifying Synthetic Datasets with Requirements Engineering\n*   How Do Model Export Formats Impact the Development of ML-Enabled Systems? A Case Study on Model Integration\n*   ImageBiTe: A Framework for Evaluating Representational Harms in Text-to-Image Models\n*   InsightAI: Root Cause Analysis in Large Hierarchical Log Files with Private Data Using Large Language Models\n*   Investigating Issues that Lead to Code Technical Debt in Machine Learning Systems\n*   LLM-Based Safety Case Generation for Baidu Apollo: Are We There Yet?\n*   LoCoML: A Framework for Real-World ML Inference Pipelines\n*   MLScent: A tool for Anti-pattern detection in ML projects\n*   On-Device or Remote? On the Energy Efficiency of Fetching LLM-Generated Content\n\n## Important Dates\n\n*   **Abstracts (Optional):** November 2, 2024\n*   **Papers:** November 9, 2024\n*   **Notifications:** January 12, 2025\n*   **Camera-Ready:** February 5, 2025\n\n## Program Committee Co-Chairs\n\n*   Luís Cruz, TU Delft, Netherlands\n*   Qinghua Lu, Data61, CSIRO, Australia"
}

